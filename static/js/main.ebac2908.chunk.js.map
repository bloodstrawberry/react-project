{"version":3,"sources":["page/Home.js","page/HandsontableToggleButton.js","page/CustomHansOnTable.js","page/MyHandsonTable.js","page/MyCKEditor.js","page/MyDiffViewer.js","page/TabEditor.js","page/Floating.js","page/MyEncrypt.js","page/githublibrary.js","page/ToastUIEditor.js","page/myCustomActions.js","page/ChonkyBrowser.js","page/ChonkyLoader.js","ChatLogin.js","page/ChatUI.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","StyledToggleButtonGroup","styled","ToggleButtonGroup","_ref","theme","& .MuiToggleButtonGroup-grouped","margin","spacing","border","&.Mui-disabled","&:not(:first-of-type)","borderRadius","shape","&:first-of-type","HandsontableToggleButton","_ref2","myHandsOnTable","selectedCell","_useState","useState","_useState2","_slicedToArray","horizontalAlignment","setHorizontalAlignment","_useState3","_useState4","verticalAlignment","setVerticalAlignment","_useState5","_useState6","formats","setFormats","_useState7","_useState8","showCompactPicker","setShowCompactPicker","_useState9","top","left","_useState10","pickerPosition","setPickerPosition","_useState11","_useState12","fontColor","setFontColor","_useState13","_useState14","bgColor","setBgColor","getCellInfoRange","selecetedRangeCells","getSelectedRange","undefined","_step","cellPositions","_iterator","_createForOfIteratorHelper","s","n","done","cell","value","r","from","row","to","c","col","push","err","e","f","getHorizontalStatus","className","status","split","filter","item","includes","getVerticalStatus","handleAlignment","event","newAlignment","type","console","log","_step2","_iterator2","_loop","pos","cellInfo","getCell","horizontal","vertical","join","handleToggleCompactPicker","rect","currentTarget","getBoundingClientRect","pickerTop","bottom","window","scrollY","pickerLeft","scrollX","prev","handleChangeComplete","color","colorType","hex","_step4","_iterator4","style","backgroundColor","setButtonState","baseCell","getCellInfoBase","fontWeight","fontStyle","textDecoration","concat","_toConsumableArray","useEffect","Box","sx","m","marginBottom","Paper","elevation","display","palette","divider","flexWrap","width","size","exclusive","onChange","alignment","aria-label","ToggleButton","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","VerticalAlignTopIcon","VerticalAlignCenterIcon","VerticalAlignBottomIcon","Divider","flexItem","orientation","mx","my","newFormats","_step3","_iterator3","deco","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatStrikethroughIcon","onClick","ColorizeIcon","ArrowDropDownIcon","FormatColorFillIcon","position","zIndex","right","fms","CompactPicker","onChangeComplete","getColorPicker","Rectangle","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleMouseEnter","clientX","clientY","setState","showTooltip","mouseX","mouseY","handleMouseLeave","state","_inherits","_createClass","key","_this$props","height","_this$state","boxShadow","pointerEvents","tooltipStyle","padding","cursor","onMouseEnter","onMouseLeave","Component","DisplayCellStyle","div","_templateObject","_taggedTemplateLiteral","data","CustomHansOnTable","myTable","myOptions","setMyHandsOnTable","displayCellInfo","setDisplaySetInfo","setSelectedCell","getComments","comments","localStorage","getItem","JSON","parse","getMergeCells","mergeCells","localCellStyle","options","colHeaders","rowHeaders","wordWrap","manualColumnResize","manualRowResize","manualColumnMove","manualRowMove","allowInsertColumn","allowInsertRow","allowRemoveColumn","allowRemoveRow","autoWrapCol","autoWrapRow","dragToScroll","persistentState","outsideClickDeselects","readOnly","enterBeginsEditing","copyable","copyPaste","undo","trimWhitespace","contextMenu","manualColumnFreeze","observeChanges","afterChangesObserved","startCols","startRows","afterSelection","selectedLast","getSelectedLast","getValue","colWidths","rowHeights","afterSetCellMeta","obj","temp","comment","setItem","stringify","afterUnmergeCells","cellRange","auto","cells","prop","cellProperties","renderer","instance","td","Handsontable","renderers","TextRenderer","apply","arguments","licenseKey","setColWidths","table","setOptions","colLength","getData","length","widths","i","getColWidth","setRowHeights","rowLength","heights","getRowHeight","container","document","getElementById","innerHTML","_objectSpread","trueFalseOptions","numberOptions","addHook","mergeParent","getCellMeta","spanned","localOptions","Array","isArray","render","makeTable","changeFormat","toString","replace","selected","getSelected","startRow","startCol","cellElement","cellRect","offsetLeft","offsetTop","x","y","Button","variant","csv","map","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","id","marginTop","myDefaultOptions","maxCols","maxRows","minCols","minRows","minSpareRows","minSpareCols","fixedColumnsLeft","fixedRowsTop","fixedRowsBottom","rowHeaderWidth","MyHandsonTable","setMyOptions","toggleDrawer","anchor","open","_defineProperty","makeTrueFalseCheckBox","pair","Object","entries","Boolean","idx","FormControlLabel","control","Checkbox","checked","label","option","changeTrueFalseOptions","makeNumberInput","Number","FormControl","InputLabel","htmlFor","Input","isNaN","changeNumberOptions","target","initLocalStorage","Fragment","Drawer","onClose","flexDirection","FormHelperText","MyCKEditor","CKEditor","editor","ClassicEditor","onReady","onBlur","onFocus","MyDiffViewer","oldCode","setOldCode","newCode","setNewCode","splitView","setSplitView","DiffMethod","CHARS","diffMethod","setDiffMethod","CheckIcon","justifyContent","alignItems","Textarea","name","placeholder","ReactDiffViewer","oldValue","newValue","compareMethod","Select","labelId","MenuItem","TextAreaTabPanel","children","index","tabs","setTabs","other","_objectWithoutProperties","assign","role","hidden","aria-labelledby","p","content","updatedTabs","TabEditor","title","activeTab","setActiveTab","editIndex","setEditIndex","changeTabTitle","newTitle","handleTabContextMenu","preventDefault","Swal","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","tab","Math","max","deleteTab","borderBottom","borderColor","Tabs","scrollButtons","Tab","autoFocus","select","trim","handleTitleBlur","outline","onDoubleClick","onContextMenu","AddIcon","blue","grey","TriggerButton","mode","StyledSnackbar","Snackbar","SnackbarContent","positioningStyles","entering","entered","exiting","exited","unmounted","Floating","showAlert","setShowAlert","floatingMessage","setFloatingMessage","setOpen","setExited","nodeRef","useRef","handleClose","_","reason","timer","setTimeout","clearTimeout","paragraphs","handleButtonClick","autoHideDuration","Transition","timeout","enter","exit","in","appear","unmountOnExit","onEnter","onExited","transform","transition","ref","CloseIcon","Alert","severity","opacity","EncryptionComponent","inputText1","setInputText1","inputText2","setInputText2","encryptedAESText","setEncryptedAESText","decryptedAESText","setDecryptedAESText","hashedText","setHashedText","TextField","encrypted","CryptoJS","AES","encrypt","decrypted","decrypt","enc","Utf8","hashed","SHA256","_regeneratorRuntime","t","prototype","hasOwnProperty","o","defineProperty","Symbol","a","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","myKey","process","replaceAll","repo","fileRead","_asyncToGenerator","_callee","path","octokit","_context","Octokit","auth","request","encoding","decoding","decodeURIComponent","escape","atob","t0","_x","getSHA","_callee2","_context2","owner","sha","_x2","_x3","fileWrite","_ref3","_callee3","contents","currentSHA","_context3","message","committer","email","btoa","unescape","encodeURIComponent","headers","X-GitHub-Api-Version","_x4","_x5","colorSyntaxOptions","preset","ToastEditor","editorRef","editMode","setEditMode","initData","init","filePath","viewer","gh","removeItem","Viewer","el","querySelector","usageStatistics","plugins","tableMergedCell","setMarkdown","current","getInstance","markDownContent","getMarkdown","htmlContent","getHTML","disabled","Editor","previewStyle","initialEditType","toolbarItems","colorSyntax","uploadFileAction","defineFileAction","button","toolbar","ChonkyIconName","upload","customActions","requiresSelection","fileFilter","file","isDir","allowArrayLike","it","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr","len","arr2","ChonkyBrowser","memo","darkMode","setDarkMode","fileInputRef","demoMap","chonkyMap","prepareCustomFileMap","baseFileMap","fileMap","rootFolderId","_useCustomFileMap","_useMemo","useMemo","setFileMap","currentFolderId","setCurrentFolderId","resetFileMap","useCallback","currentFolderIdRef","deleteFiles","files","currentFileMap","newFileMap","parentId","parent","newChildrenIds","childrenIds","childrenCount","moveFiles","source","destination","moveFileIds","Set","newSourceChildrenIds","has","newDestinationChildrenIds","idCounter","createFolder","folderName","newFolderId","modDate","Date","createFile","fileName","useCustomFileMap","setChonkyDefaults","iconComponent","ChonkyIconFA","fileId","useFiles","folderChain","currentFolder","parentFile","unshift","useFolderChain","handleFileAction","toggleDarkMode","ChonkyActions","OpenFiles","_data$payload","payload","targetFile","fileToOpen","FileHelper","isDirectory","endsWith","fileNames","selectedFiles","dirPath","DeleteFiles","selectedFilesForAction","MoveFiles","CreateFolder","prompt","ToggleDarkMode","useFileActionHandler","fileActions","thumbnailGenerator","thumbnailUrl","fileUpload","accept","multiple","FullFileBrowser","onFileAction","ChonkyLoader","setChonkyMap","getChonkyMap","repoMap","ChatLogin","navigate","useNavigate","_React$useState","_React$useState2","setID","marginRight","loginID","AVATAR_MAP","Lilly","Joe","Emily","Akane","Eliot","Zoe","totalMessages","defaultConversation","info","lastSenderName","src","ChatUI","location","useLocation","setLoginID","activeID","setActiveID","messages","setMessages","enterSeparator","Conversation","Avatar","MessageSeparator","MainContainer","responsive","Sidebar","ConversationList","active","leftSeparator","changeRoom","ChatContainer","ConversationHeader","Back","Content","userName","Actions","VoiceCallButton","VideoCallButton","InfoButton","MessageList","Message","model","avatar","MessageInput","onSend","input","newMessage","direction","App","Link","Routes","Route","element","ToastUIEditor","MyEncrypt","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.ebac2908.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport FormatAlignLeftIcon from \"@mui/icons-material/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@mui/icons-material/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\n//import FormatAlignJustifyIcon from \"@mui/icons-material/FormatAlignJustify\";\r\nimport VerticalAlignBottomIcon from \"@mui/icons-material/VerticalAlignBottom\";\r\nimport VerticalAlignCenterIcon from \"@mui/icons-material/VerticalAlignCenter\";\r\nimport VerticalAlignTopIcon from \"@mui/icons-material/VerticalAlignTop\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport FormatStrikethroughIcon from \"@mui/icons-material/FormatStrikethrough\";\r\nimport FormatColorFillIcon from \"@mui/icons-material/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nimport { CompactPicker } from \"react-color\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n  \"& .MuiToggleButtonGroup-grouped\": {\r\n    margin: theme.spacing(0.5),\r\n    border: 0,\r\n    \"&.Mui-disabled\": {\r\n      border: 0,\r\n    },\r\n    \"&:not(:first-of-type)\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"&:first-of-type\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HandsontableToggleButton = ({ myHandsOnTable, selectedCell }) => {\r\n  const [horizontalAlignment, setHorizontalAlignment] = useState(\"\");\r\n  const [verticalAlignment, setVerticalAlignment] = useState(\"\");\r\n  const [formats, setFormats] = useState(() => []);\r\n\r\n  const [showCompactPicker, setShowCompactPicker] = useState(false);\r\n  const [pickerPosition, setPickerPosition] = useState({ top: 0, left: 0 });\r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [bgColor, setBgColor] = useState(\"#FFFFFF\");\r\n\r\n  const getCellInfoBase = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let baseCell = selecetedRangeCells[0].from;\r\n    return myHandsOnTable.getCell(baseCell.row, baseCell.col);\r\n  };\r\n\r\n  const getCellInfoRange = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let cellPositions = [];\r\n    for (let cell of selecetedRangeCells) {\r\n      for (let r = cell.from.row; r <= cell.to.row; r++) {\r\n        for (let c = cell.from.col; c <= cell.to.col; c++)\r\n          cellPositions.push([r, c]);\r\n      }\r\n    }\r\n\r\n    return cellPositions;\r\n  };\r\n\r\n  const getHorizontalStatus = (className) => {\r\n    let status = [\"htLeft\", \"htCenter\", \"htRight\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const getVerticalStatus = (className) => {\r\n    let status = [\"htTop\", \"htMiddle\", \"htBottom\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment, type) => {\r\n    console.log(newAlignment, type);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    if (type === \"horizontal\") setHorizontalAlignment(newAlignment);\r\n    else if (type === \"vertical\") setVerticalAlignment(newAlignment);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n      let className = cellInfo.className;\r\n      let split = className.split(\" \");\r\n      if (type === \"horizontal\") {\r\n        let horizontal = getHorizontalStatus(className);\r\n        split = split.filter((item) => item !== horizontal); // 현재 설정 값 삭제\r\n      } else if (type === \"vertical\") {\r\n        let vertical = getVerticalStatus(className);\r\n        split = split.filter((item) => item !== vertical); // 현재 설정 값 삭제\r\n      }\r\n\r\n      if (newAlignment) split.push(newAlignment); // 새로 설정된 값 추가.\r\n\r\n      cellInfo.className = split.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    console.log(newFormats);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    setFormats(newFormats);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      cellInfo.style.fontWeight = newFormats.includes(\"bold\") ? \"bold\" : \"\";\r\n      cellInfo.style.fontStyle = newFormats.includes(\"italic\") ? \"italic\" : \"\";\r\n\r\n      let deco = [];\r\n      if (newFormats.includes(\"underline\")) deco.push(\"underline\");\r\n      if (newFormats.includes(\"line-through\")) deco.push(\"line-through\");\r\n\r\n      cellInfo.style.textDecoration = deco.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleToggleCompactPicker = (event, type) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    const iconButton = event.currentTarget;\r\n    const rect = iconButton.getBoundingClientRect();\r\n    const pickerTop = rect.bottom + window.scrollY;\r\n    const pickerLeft = rect.left + window.scrollX;\r\n\r\n    setPickerPosition({ top: pickerTop, left: pickerLeft });\r\n    setShowCompactPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleChangeComplete = (color, event) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n\r\n    console.log(colorType, color.hex);\r\n\r\n    if (colorType === \"fontColor\") setFontColor(color.hex);\r\n    else setBgColor(color.hex);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      if (colorType === \"fontColor\") {\r\n        cellInfo.style.color = color.hex;\r\n      } else {\r\n        cellInfo.style.backgroundColor = color.hex;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getColorPicker = () => {\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n    return (\r\n      <CompactPicker\r\n        color={colorType === \"fontColor\" ? fontColor : bgColor}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    let fms = formats.filter(\r\n      (item) => (item === \"fontColor\" || item === \"bgColor\") === false\r\n    );\r\n    setFormats(fms);\r\n\r\n    setShowCompactPicker(false);\r\n  };\r\n\r\n  const setButtonState = () => {\r\n    if (myHandsOnTable === undefined) return;\r\n\r\n    let cellInfo = getCellInfoBase();\r\n    let className = cellInfo.className;\r\n    let horizontal = getHorizontalStatus(className) || \"\"; // undefined 처리\r\n    let vertical = getVerticalStatus(className) || \"\";\r\n\r\n    setHorizontalAlignment(horizontal);\r\n    setVerticalAlignment(vertical);\r\n\r\n    let fontWeight = cellInfo.style.fontWeight;\r\n    let fontStyle = cellInfo.style.fontStyle;\r\n    let textDecoration = cellInfo.style.textDecoration.split(\" \");\r\n\r\n    setFormats([fontWeight, fontStyle, ...textDecoration]);\r\n    setFontColor(cellInfo.style.color);\r\n    setBgColor(cellInfo.style.backgroundColor);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonState();\r\n  }, [selectedCell]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2, marginBottom: 5 }}>\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            display: \"flex\",\r\n            border: (theme) => `1px solid ${theme.palette.divider}`,\r\n            flexWrap: \"wrap\",\r\n            width: \"700px\",\r\n          }}\r\n        >\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={horizontalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"horizontal\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htLeft\" aria-label=\"left aligned\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htCenter\" aria-label=\"centered\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htRight\" aria-label=\"right aligned\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            {/* <ToggleButton value=\"justify\" aria-label=\"justified\">\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton> */}\r\n          </StyledToggleButtonGroup>\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={verticalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"vertical\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htTop\" aria-label=\"top aligned\">\r\n              <VerticalAlignTopIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htMiddle\" aria-label=\"middle\">\r\n              <VerticalAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htBottom\" aria-label=\"bottom aligned\">\r\n              <VerticalAlignBottomIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n\r\n          <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={formats}\r\n            onChange={handleFormat}\r\n            aria-label=\"text formatting\"\r\n          >\r\n            <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underline\" aria-label=\"underline\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line-through\" aria-label=\"line-through\">\r\n              <FormatStrikethroughIcon />\r\n            </ToggleButton>\r\n\r\n            <ToggleButton\r\n              value=\"fontColor\"\r\n              aria-label=\"fontColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"fontColor\")}\r\n            >\r\n              <ColorizeIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"bgColor\"\r\n              aria-label=\"bgColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"bgColor\")}\r\n            >\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n        </Paper>\r\n\r\n        {showCompactPicker && (\r\n          <div\r\n            className=\"compact-picker-container\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: pickerPosition.top + \"px\",\r\n              left: pickerPosition.left + \"px\",\r\n              zIndex: 1000,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n              }}\r\n              onClick={handleClose}\r\n            />\r\n            {getColorPicker()}\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandsontableToggleButton;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Handsontable from \"handsontable\";\r\nimport \"handsontable/dist/handsontable.full.min.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport styled from \"styled-components\";\r\nimport HandsontableToggleButton from \"./HandsontableToggleButton\";\r\n\r\nclass Rectangle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showTooltip: false,\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n    };\r\n  }\r\n\r\n  handleMouseEnter = (event) => {\r\n    const { clientX, clientY } = event;\r\n    this.setState({\r\n      showTooltip: true,\r\n      mouseX: clientX,\r\n      mouseY: clientY,\r\n    });\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    this.setState({\r\n      showTooltip: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { top, left, width, height } = this.props;\r\n    const { showTooltip, mouseX, mouseY } = this.state;\r\n\r\n    const style = {\r\n      zIndex: 1000,\r\n      position: \"absolute\",\r\n      top: top,\r\n      left: left,\r\n      width: width,\r\n      height: height,\r\n      boxShadow: `inset 0 0 0 2px red`,\r\n      backgroundColor: \"transparent\",\r\n      pointerEvents: \"none\",\r\n    };\r\n\r\n    const smallSquareStyle = {\r\n      zIndex: 1500,\r\n      position: \"absolute\",\r\n      bottom: -5,\r\n      right: -5,\r\n      width: 10,\r\n      height: 10,\r\n      backgroundColor: \"blue\",\r\n      cursor: \"pointer\",\r\n      pointerEvents: \"auto\",\r\n    };\r\n\r\n    const tooltipStyle = {\r\n      position: \"fixed\",\r\n      top: mouseY + 10,\r\n      left: mouseX + 10,\r\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n      color: \"white\",\r\n      padding: \"5px\",\r\n      borderRadius: \"3px\",\r\n      display: showTooltip ? \"block\" : \"none\",\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div\r\n          style={smallSquareStyle}\r\n          onMouseEnter={this.handleMouseEnter}\r\n          onMouseLeave={this.handleMouseLeave}\r\n        ></div>\r\n        <div style={tooltipStyle}>This is a tooltip</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst DisplayCellStyle = styled.div`\r\n  span {\r\n    background-color: #33ceff;\r\n    position: relative;\r\n    padding: 0.4rem 0.85rem;\r\n    border: 1px solid transparent;\r\n    border-radius: 0.35rem;\r\n  }\r\n`;\r\n\r\n// const data = [\r\n//   [\"\", \"Tesla\", \"Nissan\", \"Toyota\", \"Honda\", \"Mazda\", \"Ford\"],\r\n//   [\"2017\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2018\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2019\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2020\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2021\", 10, 11, 12, 13, 15, 16],\r\n// ];\r\n\r\nconst data = [\r\n  [\"\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"],\r\n  [\"Tesla\", 10, 5, 5, 10, 14, 5],\r\n  [\"Nissan\", 15, 2, 7, 11, 13, 4],\r\n  [\"Toyota\", 11, 1, 10, 12, 12, 3],\r\n  [\"Honda\", 5, 3, 7, 13, 11, 4],\r\n  [\"Mazda\", 4, 7, 5, 14, 10, 4],\r\n];\r\n\r\n// dummy data for test\r\n// const initData = () => {\r\n//   let row = [];\r\n//   for (let i = 0; i < 100; i++) {\r\n//     row.push(String.fromCharCode(\"A\".charCodeAt() + (i % 26)));\r\n//   }\r\n\r\n//   let table = [];\r\n//   for (let k = 0; k < 100; k++) {\r\n//     let tmp = JSON.parse(JSON.stringify(row));\r\n//     let number = `${k + 1}`;\r\n//     for (let i = 0; i < 100; i++)\r\n//       tmp[i] = `${tmp[i]}${number.padStart(3, \"0\")}`;\r\n//     table.push(tmp);\r\n//   }\r\n\r\n//   return table;\r\n// };\r\n\r\n// let searchResultCount = 0;\r\n// function searchResultCounter(instance, row, col, value, result) {\r\n//   const DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {\r\n//     instance.getCellMeta(row, col).isSearchResult = testResult;\r\n//   };\r\n\r\n//   DEFAULT_CALLBACK.apply(this, arguments);\r\n\r\n//   if (result) {\r\n//     searchResultCount++;\r\n//   }\r\n// }\r\n\r\n// function redRenderer(instance, td) {\r\n//   Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n//   td.style.backgroundColor = \"red\";\r\n//   td.style.fontWeight = \"bold\";\r\n// }\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\nconst COMMENTS_KEY = \"COMMENTS_KEY\";\r\nconst MERGE_CELLS_KEY = \"MERGE_CELLS_KEY\";\r\nconst CELL_STYLE_KEY = \"CELL_STYLE_KEY\";\r\n\r\nconst CustomHansOnTable = ({ myOptions }) => {\r\n  const [myHandsOnTable, setMyHandsOnTable] = useState();\r\n  const [displayCellInfo, setDisplaySetInfo] = useState(\"\");\r\n  const [selectedCell, setSelectedCell] = useState([0, 0]);\r\n\r\n  const getComments = () => {\r\n    let comments = localStorage.getItem(COMMENTS_KEY);\r\n\r\n    if (comments === null) return [];\r\n\r\n    return JSON.parse(comments);\r\n  };\r\n\r\n  const getMergeCells = () => {\r\n    let mergeCells = localStorage.getItem(MERGE_CELLS_KEY);\r\n\r\n    if (mergeCells === null) return [];\r\n\r\n    return JSON.parse(mergeCells);\r\n  };\r\n\r\n  // const myNewQueryMethod = (searchValue, dataValue) => {\r\n  //   if (!searchValue) return false;\r\n\r\n  //   dataValue = dataValue || \"\";\r\n  //   return searchValue.toString() === dataValue.toString();\r\n  // };\r\n\r\n  const cellSelected = () => {\r\n    let selectedLast = myTable.getSelectedLast();\r\n\r\n    if (selectedLast[0] < 0 || selectedLast[1] < 0) return;\r\n\r\n    let value = myTable.getValue() || \"\";\r\n    setDisplaySetInfo(value);\r\n\r\n    setSelectedCell([selectedLast[0], selectedLast[1]]);\r\n  };\r\n\r\n  const localCellStyle = localStorage.getItem(CELL_STYLE_KEY)\r\n    ? JSON.parse(localStorage.getItem(CELL_STYLE_KEY))\r\n    : null;\r\n\r\n  const options = {\r\n    data, // initData(),\r\n\r\n    /* true or false options */\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n\r\n    observeChanges: true,\r\n    afterChangesObserved: () => {\r\n      //console.log(\"change !!\");\r\n    },\r\n\r\n    // filters: true, /* 필터 기능 on 6.2.2 pro  */,\r\n    // dropdownMenu: true, /* dropdown 메뉴 설정 6.2.2 pro */\r\n\r\n    /* Selected Options */\r\n    className: \"htMiddle htCenter\" /* Cell Alignment */,\r\n    // stretchH: \"none\", /* 빈 공간을 채우는 방법 : none, last, all */\r\n    // selectionMode: \"multiple\", /* Ctrl 키 + 선택 가능한 셀 : multiple, range, single */\r\n    // fillHandle : true, /* 드래그로 자동 채움 : true, false, vertical, horizontal 옵션 */\r\n    // disableVisualSelection: \"current\", /* 셀 선택 활성화 여부 : false, true, current, area, header, [option1, option2, ...] */\r\n\r\n    /* Number Options */\r\n    width: 1000,\r\n    height: 1000,\r\n\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 3 /* data가 없는 경우 기본 설정 */,\r\n    afterSelection: cellSelected,\r\n    // maxCols: 2, /* 주어진 값보다 큰 Column은 제거 */\r\n    // maxRows: 3, /* 주어진 값보다 큰 Row는 제거 */\r\n    // minCols: 10, /* 최소한의 Column */\r\n    // minRows: 10, /* 최소한의 Row */\r\n    // minSpareRows: 1, /* 빈 열 자동 추가 */\r\n    // minSpareCols: 2, /* 빈 행 자동 추가 */\r\n    // fixedColumnsLeft: 2,\r\n    // fixedRowsTop: 3,\r\n    // fixedRowsBottom: 2,\r\n    // rowHeaderWidth: 250, /* 행 헤더 너비 */\r\n\r\n    /* Customizing Options */\r\n    colWidths: 60 /* 특정 위치 너비 변경 : [60, 120, 60, 60, 60, 60, 60] */,\r\n    rowHeights: 25,\r\n    // placeholder: 'Empty',\r\n    // columnSorting: {\r\n    //   indicator: true, /* default true, 정렬 순서 표시 마크 (↑↓) on / off */\r\n    //   sortEmptyCells: true, /* true : 빈 셀도 정렬, false : 모든 빈 셀은 테이블 끝으로 이동 */\r\n    //   headerAction: true, /* default true, 헤더 클릭 시 정렬 기능 on / off */\r\n    //   initialConfig: {\r\n    //     column: 2, /* column : 2를 기준으로 정렬 */\r\n    //     sortOrder: \"asc\", /* 내림차순 desc */\r\n    //   },\r\n\r\n    //   /* 비교함수 구현. -1, 0, 1을 return. */\r\n    //   // compareFunctionFactory: function(sortOrder, columnMeta) {\r\n    //   //   return function(value, nextValue) {\r\n    //   //     if(value > 2000) return -1;\r\n    //   //     return value - nextValue;\r\n    //   //   }\r\n    //   // },\r\n    // },\r\n\r\n    // comments: {\r\n    //   displayDelay: 1000 /* 1초 뒤에 메모가 on */,\r\n    // },\r\n\r\n    cell: getComments(),\r\n    afterSetCellMeta: (row, col, key, obj) => {\r\n      if (key === \"comment\") {\r\n        // 기존 데이터 삭제\r\n        let temp = getComments().filter(\r\n          (item) => (item.row === row && item.col === col) === false\r\n        );\r\n        if (obj !== undefined)\r\n          temp.push({ row, col, comment: { value: obj.value } });\r\n        localStorage.setItem(COMMENTS_KEY, JSON.stringify([...temp]));\r\n      }\r\n    },\r\n\r\n    // 6.2.2 미지원\r\n    // beforeSetCellMeta:(row, col, key, value) => {\r\n    //   console.log(\"before\",row, col, key, value);\r\n    // },\r\n\r\n    // afterChange: function(change, source) {\r\n    //   console.log(change, source);\r\n    //   //change [row, col, before, after];\r\n    // },\r\n\r\n    mergeCells: getMergeCells(),\r\n    afterUnmergeCells: (cellRange, auto) => {\r\n      let temp = getMergeCells().filter(\r\n        (item) =>\r\n          (item.row === cellRange.from.row &&\r\n            item.col === cellRange.from.col) === false\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    },\r\n\r\n    // search: {\r\n    //   callback: searchResultCounter,\r\n    //   queryMethod: myNewQueryMethod,\r\n    //   //searchResultClass: 'customClass'\r\n    // },\r\n\r\n    // columns: [\r\n    //     {data: \"id\", type: 'numeric'},\r\n    //     {data: \"name\", renderer: redRenderer},\r\n    //     {data: \"isActive\", type: 'checkbox'},\r\n    //     {data: \"date\", type: 'date', dateFormat: 'YYYY-MM-DD'},\r\n    //     {data: \"color\",\r\n    //       type: 'autocomplete', // dropdown\r\n    //       source: [\"yellow\", \"red\", \"orange\", \"green\", \"blue\", \"gray\", \"black\", \"white\"]\r\n    //     },\r\n    //     {\r\n    //       editor: 'select',\r\n    //       selectOptions: ['Kia', 'Nissan', 'Toyota', 'Honda']\r\n    //     },\r\n    //   ],\r\n\r\n    cells: function (row, col, prop) {\r\n      if (localCellStyle === null) return {};\r\n\r\n      let cellProperties = {};\r\n\r\n      cellProperties.className =\r\n        localCellStyle[row][col].className || \"htCenter htMiddle\"; // undefined 처리\r\n\r\n      cellProperties.renderer = function (instance, td) {\r\n        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n        td.style.fontWeight = localCellStyle[row][col].style.fontWeight || \"\";\r\n        td.style.fontStyle = localCellStyle[row][col].style.fontStyle || \"\";\r\n        td.style.textDecoration =\r\n          localCellStyle[row][col].style.textDecoration || \"\";\r\n        td.style.color = localCellStyle[row][col].style.color || \"#000000\";\r\n        td.style.backgroundColor =\r\n          localCellStyle[row][col].style.backgroundColor || \"#FFFFFF\";\r\n      };\r\n\r\n      return cellProperties;\r\n    },\r\n\r\n    licenseKey: \"non-commercial-and-evaluation\",\r\n  };\r\n\r\n  const setColWidths = (table, setOptions) => {\r\n    let colLength = table.getData()[0].length;\r\n    let widths = [];\r\n\r\n    for (let i = 0; i < colLength; i++) widths.push(table.getColWidth(i));\r\n\r\n    setOptions.cellInfo.colWidths = widths;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  const setRowHeights = (table, setOptions) => {\r\n    let rowLength = table.getData().length;\r\n    let heights = [];\r\n\r\n    for (let i = 0; i < rowLength; i++) heights.push(table.getRowHeight(i));\r\n\r\n    setOptions.cellInfo.rowHeights = heights;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  let myTable;\r\n  const makeTable = () => {\r\n    const container = document.getElementById(\"hot-app\");\r\n    container.innerHTML = \"\";\r\n\r\n    myTable = new Handsontable(container, {\r\n      ...options,\r\n      ...myOptions.trueFalseOptions,\r\n      ...myOptions.numberOptions,\r\n      ...myOptions.cellInfo,\r\n    });\r\n\r\n    myTable.addHook(\"afterMergeCells\", function (cellRange, mergeParent, auto) {\r\n      let temp = getMergeCells();\r\n      temp.push(mergeParent);\r\n      temp = temp.filter(\r\n        (item) => myTable.getCellMeta(item.row, item.col).spanned === true\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    });\r\n\r\n    myTable.addHook(\"afterColumnResize\", function (col, width) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setColWidths(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.colWidths) === false) {\r\n        setColWidths(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.colWidths[col] = width;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.addHook(\"afterRowResize\", function (row, height) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setRowHeights(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.rowHeights) === false) {\r\n        setRowHeights(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.rowHeights[row] = height;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.render();\r\n    setMyHandsOnTable(myTable);\r\n\r\n    // search 구현\r\n    // let searchField = document.getElementById(\"search_field\");\r\n    // let resultCount = document.getElementById(\"resultCount\");\r\n\r\n    // Handsontable.dom.addEvent(searchField, \"keyup\", function(event) {\r\n    //   searchResultCount = 0;\r\n\r\n    //   let search = myTable.getPlugin(\"search\");\r\n    //   let queryResult = search.query(this.value);\r\n\r\n    //   console.log(queryResult);\r\n\r\n    //   resultCount.innerText = searchResultCount.toString();\r\n    //   myTable.render();\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeTable();\r\n  }, [myOptions]);\r\n\r\n  const changeFormat = (value) => {\r\n    value = value || \"\";\r\n    value = value.toString();\r\n    if (value.includes('\"')) return '\"' + value.replace(/\"/g, '\"\"') + '\"';\r\n    if (value.includes(\",\") || value.includes(\"\\n\")) return '\"' + value + '\"';\r\n    return value;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    let data = myHandsOnTable.getData();\r\n\r\n    let csv = \"\";\r\n    for (let r = 0; r < data.length; r++) {\r\n      let row = data[r].map(changeFormat).join(\",\");\r\n      csv += row + \"\\n\";\r\n    }\r\n\r\n    let fileDown = \"data:csv;charset=utf-8,\" + csv;\r\n    let encodedUri = encodeURI(fileDown);\r\n    let link = document.createElement(\"a\");\r\n\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"handsontable.csv\");\r\n\r\n    document.body.appendChild(link);\r\n\r\n    link.click();\r\n\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const test = () => {\r\n    let selected = myHandsOnTable.getSelected();\r\n    console.log(selected);\r\n    console.log(selected[0][0], selected[0][1]);\r\n\r\n    let startRow = selected[0][0];\r\n    let startCol = selected[0][1];\r\n    const cellElement = myHandsOnTable.getCell(startRow, startCol);\r\n\r\n    console.log(cellElement);\r\n    const cellRect = cellElement.getBoundingClientRect();\r\n    console.log(cellElement.offsetLeft);\r\n    console.log(cellElement.offsetTop);\r\n\r\n    const x = cellRect.left + window.scrollX;\r\n    const y = cellRect.top + window.scrollY;\r\n    console.log(\"X 좌표:\", x, \"Y 좌표:\", y);\r\n    console.log(cellRect, cellElement);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Rectangle top=\"666px\" left=\"194px\" width=\"60px\" height=\"26px\" />\r\n      <Rectangle top=\"332px\" left=\"131px\" width=\"5px\" height=\"5px\" />\r\n\r\n      <button onClick={test}>test</button>\r\n      <p>1</p>\r\n      <p>1</p>\r\n\r\n      <p>1</p>\r\n      <p>1</p>\r\n      <p>1</p>\r\n      <p>1</p>\r\n      <p>1</p>\r\n\r\n      <Box sx={{ m: 2 }}>\r\n        <Button\r\n          sx={{ m: 2 }}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={downloadCSV}\r\n        >\r\n          Download CSV\r\n        </Button>\r\n        {/* <input id=\"search_field\" type=\"search\" placeholder=\"search\" />\r\n        <p>\r\n        <span id=\"resultCount\">0</span> results\r\n      </p> */}\r\n        <HandsontableToggleButton\r\n          myHandsOnTable={myHandsOnTable}\r\n          selectedCell={selectedCell}\r\n        />\r\n        <DisplayCellStyle>\r\n          <span>{displayCellInfo}</span>\r\n        </DisplayCellStyle>\r\n        <div id=\"hot-app\" style={{ marginTop: \"13px\" }}></div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomHansOnTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CustomHansOnTable from \"./CustomHansOnTable\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\n\r\nconst myDefaultOptions = {\r\n  trueFalseOptions: {\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    // outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n    observeChanges: true,\r\n  },\r\n\r\n  numberOptions: {\r\n    width: 1000,\r\n    height: 1000,\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 5 /* data가 없는 경우 기본 설정 */,\r\n    maxCols: 100 /* 주어진 값보다 큰 Column은 제거 */,\r\n    maxRows: 100 /* 주어진 값보다 큰 Row는 제거 */,\r\n    minCols: 1 /* 최소한의 Column */,\r\n    minRows: 1 /* 최소한의 Row */,\r\n    minSpareRows: 0 /* 빈 열 자동 추가 */,\r\n    minSpareCols: 0 /* 빈 행 자동 추가 */,\r\n    fixedColumnsLeft: 0,\r\n    fixedRowsTop: 0,\r\n    fixedRowsBottom: 0,\r\n    rowHeaderWidth: 55 /* 행 헤더 너비 */,\r\n  },\r\n\r\n  cellInfo: {\r\n    colWidths: 60,\r\n    rowHeights: 25,\r\n  },\r\n};\r\n\r\nconst MyHandsonTable = () => {\r\n  const [myOptions, setMyOptions] = useState(myDefaultOptions);\r\n\r\n  const [state, setState] = useState({ right: false });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const changeTrueFalseOptions = (option, value) => {\r\n    console.log(myOptions);\r\n    let temp = { ...myOptions };\r\n    temp.trueFalseOptions[option] = !value;\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeTrueFalseCheckBox = () => {\r\n    let pair = Object.entries(myOptions.trueFalseOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Boolean(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControlLabel\r\n        key={idx}\r\n        control={<Checkbox checked={item[1]} />}\r\n        label={item[0]}\r\n        onChange={() => changeTrueFalseOptions(item[0], item[1])}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const changeNumberOptions = (option, value) => {\r\n    let temp = { ...myOptions };\r\n\r\n    if (isNaN(Number(value))) return;\r\n\r\n    temp.numberOptions[option] = Number(value);\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeNumberInput = () => {\r\n    let pair = Object.entries(myOptions.numberOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Number(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControl key={idx} sx={{ m: 2 }} variant=\"standard\">\r\n        <InputLabel htmlFor=\"component-error\">{item[0]}</InputLabel>\r\n        <Input\r\n          value={item[1]}\r\n          onChange={(e) => changeNumberOptions(item[0], e.target.value)}\r\n        />\r\n      </FormControl>\r\n    ));\r\n  };\r\n\r\n  const list = () => (\r\n    <Box sx={{ width: 600 }}>\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>{makeTrueFalseCheckBox()}</Box>\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>\r\n        <FormHelperText sx={{ color: \"blue\" }}>\r\n          0 이상 숫자를 입력하세요.\r\n        </FormHelperText>\r\n        {makeNumberInput()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const initLocalStorage = () => {\r\n    let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n    if (localOptions === null) return;\r\n\r\n    setMyOptions(JSON.parse(localOptions));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initLocalStorage();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {[\"right\"].map((anchor) => (\r\n          <React.Fragment key={anchor}>\r\n            <Button\r\n              sx={{ m: 2 }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={toggleDrawer(anchor, true)}\r\n            >\r\n              Options Setting\r\n            </Button>\r\n            <Drawer\r\n              anchor={anchor}\r\n              open={state[anchor]}\r\n              onClose={toggleDrawer(anchor, false)}\r\n            >\r\n              {list()}\r\n            </Drawer>\r\n          </React.Fragment>\r\n        ))}\r\n        <CustomHansOnTable myOptions={myOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyHandsonTable;\r\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst MyCKEditor = () => {\n  return (\n    <div>\n      <Box sx={{ m: 2 }}>\n        <h1>CK Editor</h1>\n        <CKEditor\n          editor={ClassicEditor}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onReady={(editor) => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log(\"Editor is ready to use!\", editor);\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(event, editor) => {\n            console.log(\"Blur.\", editor);\n          }}\n          onFocus={(event, editor) => {\n            console.log(\"Focus.\", editor);\n          }}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default MyCKEditor;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Textarea from \"@mui/joy/Textarea\";\n\nimport ReactDiffViewer, { DiffMethod } from \"react-diff-viewer-continued\";\n\nconst MyDiffViewer = () => {\n  const [oldCode, setOldCode] = useState(\"\");\n  const [newCode, setNewCode] = useState(\"\");\n  const [splitView, setSplitView] = useState(true);\n  const [diffMethod, setDiffMethod] = useState(DiffMethod.CHARS);\n\n  return (\n    <Box sx={{ m: 2 }}>\n      <ToggleButton\n        sx={{ marginBottom: 2 }}\n        value=\"check\"\n        selected={splitView}\n        onChange={() => {\n          setSplitView(!splitView);\n        }}\n      >\n        <CheckIcon size=\"small\" /> split\n      </ToggleButton>\n      <Box\n        sx={{\n          m: 1,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Textarea\n          style={{\n            width: \"50%\",\n            margin: \"1px\",\n          }}\n          name=\"Left\"\n          placeholder=\"Old Text...\"\n          variant=\"outlined\"\n          color=\"primary\"\n          minRows={15}\n          maxRows={15}\n          value={oldCode}\n          onChange={(e) => setOldCode(e.target.value)}\n        />\n        <Textarea\n          style={{\n            width: \"50%\",\n            margin: \"1px\",\n          }}\n          name=\"Right\"\n          placeholder=\"New Text...\"\n          variant=\"outlined\"\n          color=\"warning\"\n          minRows={15}\n          maxRows={15}\n          value={newCode}\n          onChange={(e) => setNewCode(e.target.value)}\n        />\n      </Box>\n      <ReactDiffViewer\n        oldValue={oldCode}\n        newValue={newCode}\n        compareMethod={diffMethod}\n        splitView={splitView}\n      />\n      <FormControl sx={{ m: 2, width: \"500px\" }}>\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={diffMethod}\n          label=\"Diff Method\"\n          onChange={(e) => setDiffMethod(e.target.value)}\n        >\n          <MenuItem value=\"diffChars\">CHARS</MenuItem>\n          <MenuItem value=\"diffWords\">WORDS</MenuItem>\n          <MenuItem value=\"diffWordsWithSpace\">WORDS_WITH_SPACE</MenuItem>\n          <MenuItem value=\"diffLines\">LINES </MenuItem>\n          <MenuItem value=\"diffTrimmedLines\">TRIMMED_LINES </MenuItem>\n          <MenuItem value=\"diffSentences\">SENTENCES </MenuItem>\n          <MenuItem value=\"diffCss\">CSS </MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default MyDiffViewer;\n","import React, { useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Textarea from \"@mui/joy/Textarea\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst TextAreaTabPanel = (props) => {\r\n  const { children, value, index, tabs, setTabs, ...other } = props;\r\n\r\n  const handleChange = (event) => {\r\n    const updatedTabs = [...tabs];\r\n    updatedTabs[index].content = event.target.value;\r\n    setTabs(updatedTabs);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Textarea\r\n            id={`textarea-${index}`}\r\n            placeholder=\"Input Text ...\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            minRows={15}\r\n            maxRows={15}\r\n            value={tabs[index].content}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabEditor = () => {\r\n  const [tabs, setTabs] = useState([\r\n    { title: \"Tab 1\", content: \"Content 1\" },\r\n    { title: \"Tab 2\", content: \"Content 2\" },\r\n    { title: \"Tab 3\", content: \"Content 3\" },\r\n  ]);\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const changeTabTitle = (index, newTitle) => {\r\n    const updatedTabs = [...tabs];\r\n    updatedTabs[index].title = newTitle;\r\n    setTabs(updatedTabs);\r\n  };\r\n\r\n  const handleTitleBlur = (index, event) => {\r\n    const newTitle = event.target.value.trim();\r\n    if (newTitle !== \"\" && newTitle !== tabs[index].title) {\r\n      changeTabTitle(index, newTitle);\r\n    }\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const addTab = () => {\r\n    const newTab = {\r\n      title: `New Tab`,\r\n      content: `New Content`,\r\n    };\r\n    setTabs([...tabs, newTab]);\r\n    setActiveTab(tabs.length); // Make the newly added tab active\r\n  };\r\n\r\n  const deleteTab = (index) => {\r\n    const updatedTabs = tabs.filter((tab, i) => i !== index);\r\n    setTabs(updatedTabs);\r\n    if (activeTab === index) {\r\n      setActiveTab(Math.max(activeTab - 1, 0));\r\n    }\r\n  };\r\n\r\n  const handleTabContextMenu = (event, index) => {\r\n    event.preventDefault();\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete this tab?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"No\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteTab(index);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ m: 2 }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleTabChange}\r\n          aria-label=\"dynamic tabs example\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((tab, index) => (\r\n            <Tab\r\n              key={index}\r\n              label={\r\n                editIndex === index ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={tab.title}\r\n                    autoFocus\r\n                    onFocus={(e) => e.target.select()}\r\n                    onChange={(e) => changeTabTitle(index, e.target.value)}\r\n                    onBlur={(e) => handleTitleBlur(index, e)}\r\n                    style={{ border: \"none\", outline: \"none\" }}\r\n                  />\r\n                ) : (\r\n                  <span\r\n                    onDoubleClick={() => setEditIndex(index)}\r\n                    onContextMenu={(event) =>\r\n                      handleTabContextMenu(event, index)\r\n                    }\r\n                  >\r\n                    {tab.title}\r\n                  </span>\r\n                )\r\n              }\r\n            />\r\n          ))}\r\n          <Tab onClick={addTab} label={<AddIcon />} />\r\n        </Tabs>\r\n      </Box>\r\n      {tabs.map((tab, index) => (\r\n        <TextAreaTabPanel\r\n          key={index}\r\n          value={activeTab}\r\n          index={index}\r\n          tabs={tabs}\r\n          setTabs={setTabs}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TabEditor;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { Transition } from \"react-transition-group\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Snackbar } from \"@mui/base/Snackbar\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst blue = {\r\n  200: \"#99CCF3\",\r\n  300: \"#66B2FF\",\r\n  400: \"#3399FF\",\r\n  500: \"#007FFF\",\r\n  600: \"#0072E5\",\r\n  700: \"#0066CC\",\r\n};\r\n\r\nconst grey = {\r\n  50: \"#F3F6F9\",\r\n  100: \"#E5EAF2\",\r\n  200: \"#DAE2ED\",\r\n  300: \"#C7D0DD\",\r\n  400: \"#B0B8C4\",\r\n  500: \"#9DA8B7\",\r\n  600: \"#6B7A90\",\r\n  700: \"#434D5B\",\r\n  800: \"#303740\",\r\n  900: \"#1C2025\",\r\n};\r\n\r\nconst TriggerButton = styled(\"button\")(\r\n  ({ theme }) => `\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  transition: all 150ms ease;\r\n  cursor: pointer;\r\n  background: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\r\n  border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\r\n  color: ${theme.palette.mode === \"dark\" ? grey[200] : grey[900]};\r\n  box-shadow: 0 1px 2px ${\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(0, 0, 0, 0.5)\"\r\n      : \"rgba(45, 45, 60, 0.15)\"\r\n  };\r\n\r\n  &:hover {\r\n    background: ${theme.palette.mode === \"dark\" ? grey[800] : grey[50]};\r\n    border-color: ${theme.palette.mode === \"dark\" ? grey[600] : grey[300]};\r\n  }\r\n  &:active {\r\n    background: ${theme.palette.mode === \"dark\" ? grey[700] : grey[100]};\r\n  }\r\n\r\n  &:focus-visible {\r\n    box-shadow: 0 0 0 4px ${\r\n      theme.palette.mode === \"dark\" ? blue[300] : blue[200]\r\n    };\r\n    outline: none;\r\n  }\r\n  `\r\n);\r\n\r\nconst StyledSnackbar = styled(Snackbar)`\r\n  position: fixed;\r\n  z-index: 5500;\r\n  display: flex;\r\n  top: 16px; \r\n  left: 50%;\r\n  transform: translateX(-50%); \r\n`;\r\n\r\nconst SnackbarContent = styled(\"div\")(\r\n  ({ theme }) => `\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 5500;\r\n  display: flex;\r\n  left: auto;\r\n  justify-content: space-between;\r\n  max-width: 560px;\r\n  min-width: 300px;\r\n  background-color: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\r\n  border-radius: 8px;\r\n  border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\r\n  box-shadow: ${\r\n    theme.palette.mode === \"dark\"\r\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\r\n      : `0 2px 8px ${grey[200]}`\r\n  };\r\n  padding: 0.75rem;\r\n  color: ${theme.palette.mode === \"dark\" ? grey[50] : grey[900]};\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-weight: 600;\r\n\r\n  & .snackbar-title {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  & .snackbar-close-icon {\r\n    cursor: pointer;\r\n    font-size: 10px;\r\n    width: 1.25rem;\r\n    height: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  `\r\n);\r\n\r\nconst positioningStyles = {\r\n  entering: \"translateX(0)\",\r\n  entered: \"translateX(0)\",\r\n  exiting: \"translateX(1500px)\",\r\n  exited: \"translateX(1500px)\",\r\n  unmounted: \"translateX(1500px)\",\r\n};\r\n\r\nconst Floating = () => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [floatingMessage, setFloatingMessage] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [exited, setExited] = useState(true);\r\n  const nodeRef = useRef(null);\r\n\r\n  const handleClose = (_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setExited(false);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    setExited(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showAlert) {\r\n      timer = setTimeout(() => {\r\n        setShowAlert(false);\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [showAlert]);\r\n\r\n  const handleButtonClick = (index) => {\r\n    setShowAlert(true);\r\n    setFloatingMessage(`${index} 번째 플로팅 메시지...`);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const paragraphs = Array.from({ length: 30 }, (_, index) => (\r\n    <p key={index}>\r\n      {`　　${index} : 번째 내용 ........................................................................................................................................................................................................   `}\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => handleButtonClick(index)}\r\n      >\r\n        Button\r\n      </Button>\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TriggerButton type=\"button\" onClick={handleClick}>\r\n          Open snackbar\r\n        </TriggerButton>\r\n        <StyledSnackbar\r\n          autoHideDuration={5000}\r\n          open={open}\r\n          onClose={handleClose}\r\n          exited={exited}\r\n        >\r\n          <Transition\r\n            timeout={{ enter: 400, exit: 400 }}\r\n            in={open}\r\n            appear\r\n            unmountOnExit\r\n            onEnter={handleOnEnter}\r\n            onExited={handleOnExited}\r\n            nodeRef={nodeRef}\r\n          >\r\n            {(status) => (\r\n              <SnackbarContent\r\n                style={{\r\n                  transform: positioningStyles[status],\r\n                  transition: \"transform 300ms ease\",\r\n                }}\r\n                ref={nodeRef}\r\n              >\r\n                <div className=\"snackbar-title\">Hello World</div>\r\n                <CloseIcon\r\n                  onClick={handleClose}\r\n                  className=\"snackbar-close-icon\"\r\n                />\r\n              </SnackbarContent>\r\n            )}\r\n          </Transition>\r\n        </StyledSnackbar>\r\n      </div>\r\n      {paragraphs}\r\n      {showAlert && (\r\n        <Alert\r\n          severity=\"info\"\r\n          onClose={handleAlertClose}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 5,\r\n            left: \"50%\",\r\n            transform: \"translateX(-50%)\",\r\n            zIndex: 9999,\r\n            opacity: 0.8, // 투명도 조절\r\n          }}\r\n        >\r\n          {floatingMessage}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Floating;\r\n","import React, { useState } from \"react\";\r\nimport { Box, TextField, Button } from \"@mui/material\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst SECRET_KEY = \"MY_SECRET_KEY\"; // or process.env.SECRET_KEY;\r\n\r\nconst EncryptionComponent = () => {\r\n  const [inputText1, setInputText1] = useState(\"\");\r\n  const [inputText2, setInputText2] = useState(\"\");\r\n\r\n  const [encryptedAESText, setEncryptedAESText] = useState(\"\");\r\n  const [decryptedAESText, setDecryptedAESText] = useState(\"\");\r\n  const [hashedText, setHashedText] = useState(\"\");\r\n\r\n  const encryptAES = () => {\r\n    let encrypted = CryptoJS.AES.encrypt(inputText1, SECRET_KEY).toString();\r\n    setEncryptedAESText(encrypted);\r\n  };\r\n\r\n  const decryptAES = () => {\r\n    let decrypted = CryptoJS.AES.decrypt(inputText1, SECRET_KEY).toString(CryptoJS.enc.Utf8);\r\n    setDecryptedAESText(decrypted);\r\n  };\r\n\r\n  const hashText = () => {\r\n    let hashed = CryptoJS.SHA256(inputText2).toString();\r\n    setHashedText(hashed);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <TextField\r\n          label=\"Text for AES\"\r\n          value={inputText1}\r\n          onChange={(e) => setInputText1(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ m: 1 }}\r\n          variant=\"outlined\"\r\n          color=\"warning\"\r\n          onClick={encryptAES}\r\n        >\r\n          Encrypt\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"success\" onClick={decryptAES}>\r\n          Decrypt\r\n        </Button>\r\n        <div>\r\n          <p>Encrypted Text AES: {encryptedAESText}</p>\r\n          <p>Decrypted Text AES: {decryptedAESText}</p>\r\n        </div>\r\n      </Box>\r\n\r\n      <hr />\r\n\r\n      <Box sx={{ m: 2 }}>\r\n        <TextField\r\n          label=\"Text for SHA256\"\r\n          value={inputText2}\r\n          onChange={(e) => setInputText2(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ m: 1 }}\r\n          variant=\"outlined\"\r\n          color=\"warning\"\r\n          onClick={hashText}\r\n        >\r\n          Hash\r\n        </Button>\r\n        <div>\r\n          <p>Hashed Text SHA256 : {hashedText}</p>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncryptionComponent;\r\n","import { Octokit } from \"@octokit/rest\";\r\n\r\nconst myKey = process.env.REACT_APP_MY_TOKEN.replaceAll(\"X\", \"\");\r\nconst repo = `auto-test`;\r\n\r\nexport const fileRead = async (path) => {\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        encoding: \"utf-8\",\r\n        decoding: \"utf-8\",\r\n      }\r\n    );\r\n\r\n    console.log(result);\r\n\r\n    return decodeURIComponent(escape(window.atob(result.data.content)));\r\n  } catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst getSHA = async (path, octokit) => {\r\n  const result = await octokit.request(\r\n    `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n    {\r\n      owner: \"bloodstrawberry\",\r\n      repo: `${repo}`,\r\n      path: `${path}`,\r\n    }\r\n  );\r\n\r\n  return result.data.sha;\r\n};\r\n\r\nexport const fileWrite = async (path, contents) => {\r\n  const octokit = new Octokit({\r\n    auth: myKey,\r\n  });\r\n\r\n  const currentSHA = await getSHA(path, octokit);\r\n  const result = await octokit.request(\r\n    `PUT /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n    {\r\n      owner: \"bloodstrawberry\",\r\n      repo: `${repo}`,\r\n      path: `${path}`,\r\n      message: \"commit message!\",\r\n      sha: currentSHA,\r\n      committer: {\r\n        name: \"bloodstrawberry\",\r\n        email: \"bloodstrawberry@github.com\",\r\n      },\r\n      content: `${btoa(unescape(encodeURIComponent(`${contents}`)))}`,\r\n      headers: {\r\n        \"X-GitHub-Api-Version\": \"2022-11-28\",\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(result.status);\r\n};","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//import { useLocation } from \"react-router-dom\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport * as gh from \"./githublibrary.js\";\r\n\r\n// Toast UI Editor\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\r\n\r\n// Dark Theme 적용\r\n// import '@toast-ui/editor/dist/toastui-editor.css';\r\n// import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\n\r\n// Color Syntax Plugin\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\n\r\n// Table Merged Cell Plugin\r\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\n\r\n//import html2pdf from 'html2pdf.js';\r\n\r\nconst colorSyntaxOptions = {\r\n  preset: [\r\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\r\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\r\n  ],\r\n};\r\n\r\nconst CONTENT_KEY = \"CONTENT_KEY\";\r\n\r\nconst ToastEditor = () => {\r\n  //const location = useLocation();\r\n\r\n  const editorRef = useRef(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  let initData = `# 제목\r\n\r\n  ***~~<span style=\"color: #EE2323\">내용</span>~~***\r\n  \r\n  * [x] 체크박스\r\n  * [ ] 체크박스 2`;\r\n\r\n  const handleSave = () => {\r\n    let markDownContent = editorRef.current.getInstance().getMarkdown();\r\n    let htmlContent = editorRef.current.getInstance().getHTML();\r\n    console.log(markDownContent);\r\n    console.log(htmlContent);\r\n    localStorage.setItem(CONTENT_KEY, markDownContent);\r\n\r\n    gh.fileWrite(\"README.md\", markDownContent);\r\n  };\r\n\r\n  const init = async() => {\r\n    let item = localStorage.getItem(CONTENT_KEY);\r\n    let open = localStorage.getItem(\"FILE_PATH\");\r\n    \r\n    // if(location.state) {\r\n    if(open) {\r\n      // let filePath = location.state.filePath;\r\n      let filePath = JSON.parse(open).filePath;\r\n      let result = await gh.fileRead(`actions/${filePath}`);\r\n\r\n      if(result !== undefined) item = result;\r\n      \r\n      localStorage.removeItem(\"FILE_PATH\");\r\n    }\r\n\r\n    if (editMode === false) {\r\n      const viewer = new Viewer({\r\n        el: document.querySelector(\".toast-editor-viewer\"),\r\n        viewer: true,\r\n        height: \"400px\",\r\n        usageStatistics: false, // 통계 수집 거부\r\n        plugins: [tableMergedCell],\r\n      });\r\n\r\n      if (item) viewer.setMarkdown(item);\r\n      else viewer.setMarkdown(initData);\r\n    }\r\n\r\n    if (item) {\r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(item);\r\n    } else {\r\n      if (editorRef.current)\r\n        editorRef.current.getInstance().setMarkdown(initData);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [editMode]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <h1>Toast UI Editor</h1>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          sx={{ m: 1 }}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editMode ? \"취소하기\" : \"편집하기\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ m: 1 }}\r\n          onClick={handleSave}\r\n          disabled={editMode === false}\r\n        >\r\n          저장하기\r\n        </Button>\r\n\r\n        {editMode === false && <div id=\"pdf-download\" className=\"toast-editor-viewer\"></div>}\r\n\r\n        {editMode === true && (\r\n          <Editor\r\n            ref={editorRef}\r\n            // initialValue={initContents}\r\n            height=\"400px\"\r\n            placeholder=\"Please Enter Text.\"\r\n            previewStyle=\"tab\" // or vertical\r\n            initialEditType=\"wysiwyg\" // or markdown\r\n            // hideModeSwitch={true} // 하단 숨기기\r\n            toolbarItems={[\r\n              // 툴바 옵션 설정\r\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\r\n              [\"hr\", \"quote\"],\r\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\r\n              [\"table\", /* \"image\", */ \"link\"],\r\n              [\"code\", \"codeblock\"],\r\n            ]}\r\n            //theme=\"dark\"\r\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\r\n            usageStatistics={false} // 통계 수집 거부\r\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\r\n          />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastEditor;\r\n","import { defineFileAction, ChonkyIconName } from \"chonky\";\r\n\r\nconst uploadFileAction = defineFileAction({\r\n  id: \"upload\",\r\n  button: {\r\n    name: \"Upload\",\r\n    toolbar: true,\r\n    contextMenu: false, \r\n    icon: ChonkyIconName.upload\r\n  }\r\n});\r\n\r\nconst viewFileAction = defineFileAction({\r\n  id: \"view\",\r\n  requiresSelection: true,\r\n  fileFilter: (file) => !file.isDir,\r\n  button: {\r\n    name: \"View\",\r\n    toolbar: false, \r\n    contextMenu: true,\r\n    icon: ChonkyIconName.file\r\n  }\r\n});\r\n\r\nexport const customActions = [\r\n  viewFileAction,\r\n  uploadFileAction\r\n];\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n} from \"react\";\r\n\r\n//import { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  setChonkyDefaults,\r\n  ChonkyActions,\r\n  FileHelper,\r\n  FullFileBrowser,\r\n} from \"chonky\";\r\nimport { ChonkyIconFA } from \"chonky-icon-fontawesome\";\r\nimport { customActions } from \"./myCustomActions\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst ChonkyBrowser = React.memo((props) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  const fileInputRef = useRef(null);\r\n  //const navigate  = useNavigate();\r\n\r\n  // const demoMap = require(\"./demo.json\");\r\n  const demoMap = props.chonkyMap;\r\n\r\n  const prepareCustomFileMap = () => {\r\n    const baseFileMap = demoMap.fileMap;\r\n    const rootFolderId = demoMap.rootFolderId;\r\n    return { baseFileMap, rootFolderId };\r\n  };\r\n\r\n  const useCustomFileMap = () => {\r\n    const { baseFileMap, rootFolderId } = useMemo(prepareCustomFileMap, []);\r\n\r\n    const [fileMap, setFileMap] = useState(baseFileMap);\r\n    const [currentFolderId, setCurrentFolderId] = useState(rootFolderId);\r\n\r\n    const resetFileMap = useCallback(() => {\r\n      setFileMap(baseFileMap);\r\n      setCurrentFolderId(rootFolderId);\r\n    }, [baseFileMap, rootFolderId]);\r\n\r\n    const currentFolderIdRef = useRef(currentFolderId);\r\n    useEffect(() => {\r\n      currentFolderIdRef.current = currentFolderId;\r\n    }, [currentFolderId]);\r\n\r\n    const deleteFiles = useCallback((files) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n        files.forEach((file) => {\r\n          delete newFileMap[file.id];\r\n\r\n          if (file.parentId) {\r\n            const parent = newFileMap[file.parentId];\r\n            const newChildrenIds = parent.childrenIds.filter(\r\n              (id) => id !== file.id\r\n            );\r\n            newFileMap[file.parentId] = {\r\n              ...parent,\r\n              childrenIds: newChildrenIds,\r\n              childrenCount: newChildrenIds.length,\r\n            };\r\n          }\r\n        });\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const moveFiles = useCallback((files, source, destination) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n        const moveFileIds = new Set(files.map((f) => f.id));\r\n\r\n        const newSourceChildrenIds = source.childrenIds.filter(\r\n          (id) => !moveFileIds.has(id)\r\n        );\r\n        newFileMap[source.id] = {\r\n          ...source,\r\n          childrenIds: newSourceChildrenIds,\r\n          childrenCount: newSourceChildrenIds.length,\r\n        };\r\n\r\n        const newDestinationChildrenIds = [\r\n          ...destination.childrenIds,\r\n          ...files.map((f) => f.id),\r\n        ];\r\n        newFileMap[destination.id] = {\r\n          ...destination,\r\n          childrenIds: newDestinationChildrenIds,\r\n          childrenCount: newDestinationChildrenIds.length,\r\n        };\r\n\r\n        files.forEach((file) => {\r\n          newFileMap[file.id] = {\r\n            ...file,\r\n            parentId: destination.id,\r\n          };\r\n        });\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const idCounter = useRef(0);\r\n    const createFolder = useCallback((folderName) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n\r\n        const newFolderId = `new-folder-${idCounter.current++}`;\r\n        newFileMap[newFolderId] = {\r\n          id: newFolderId,\r\n          name: folderName,\r\n          isDir: true,\r\n          modDate: new Date(),\r\n          parentId: currentFolderIdRef.current,\r\n          childrenIds: [],\r\n          childrenCount: 0,\r\n        };\r\n\r\n        const parent = newFileMap[currentFolderIdRef.current];\r\n        newFileMap[currentFolderIdRef.current] = {\r\n          ...parent,\r\n          childrenIds: [...parent.childrenIds, newFolderId],\r\n        };\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const createFile = useCallback((fileName) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n\r\n        const newFolderId = `new-folder-${idCounter.current++}`;\r\n        newFileMap[newFolderId] = {\r\n          id: newFolderId,\r\n          name: fileName,\r\n          modDate: new Date(),\r\n          parentId: currentFolderIdRef.current,\r\n          childrenIds: [],\r\n          childrenCount: 0,\r\n        };\r\n\r\n        const parent = newFileMap[currentFolderIdRef.current];\r\n        newFileMap[currentFolderIdRef.current] = {\r\n          ...parent,\r\n          childrenIds: [...parent.childrenIds, newFolderId],\r\n        };\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    return {\r\n      fileMap,\r\n      currentFolderId,\r\n      setCurrentFolderId,\r\n      resetFileMap,\r\n      deleteFiles,\r\n      moveFiles,\r\n      createFolder,\r\n      createFile,\r\n    };\r\n  };\r\n\r\n  const useFiles = (fileMap, currentFolderId) => {\r\n    return useMemo(() => {\r\n      const currentFolder = fileMap[currentFolderId];\r\n      const childrenIds = currentFolder.childrenIds;\r\n      const files = childrenIds.map((fileId) => fileMap[fileId]);\r\n      return files;\r\n    }, [currentFolderId, fileMap]);\r\n  };\r\n\r\n  const useFolderChain = (fileMap, currentFolderId) => {\r\n    return useMemo(() => {\r\n      const currentFolder = fileMap[currentFolderId];\r\n      const folderChain = [currentFolder];\r\n      let parentId = currentFolder.parentId;\r\n      while (parentId) {\r\n        const parentFile = fileMap[parentId];\r\n        if (parentFile) {\r\n          folderChain.unshift(parentFile);\r\n          parentId = parentFile.parentId;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      return folderChain;\r\n    }, [currentFolderId, fileMap]);\r\n  };\r\n\r\n  const useFileActionHandler = (\r\n    folderChain,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    toggleDarkMode,\r\n    fileInputRef\r\n  ) => {\r\n    return useCallback(\r\n      (data) => {\r\n        if (data.id === ChonkyActions.OpenFiles.id) {\r\n          const { targetFile, files } = data.payload;\r\n          const fileToOpen = targetFile || files[0];\r\n                   \r\n          if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\r\n            setCurrentFolderId(fileToOpen.id);\r\n            return;\r\n          }\r\n\r\n          if(targetFile.name.endsWith(\".md\")) {\r\n            let fileNames = data.state.selectedFiles.map((item) => item.name);\r\n            let dirPath = folderChain.map((item) => item.name).join(\"/\");\r\n            let filePath = `${dirPath}/${fileNames}`;\r\n\r\n            // navigate(\"/tui-editor\", { state: { filePath } });\r\n            localStorage.setItem(\"FILE_PATH\", JSON.stringify({ filePath }));\r\n            window.open(\"/react-project/tui-editor\", \"_blank\");\r\n          }\r\n        } else if (data.id === ChonkyActions.DeleteFiles.id) {\r\n          deleteFiles(data.state.selectedFilesForAction);\r\n        } else if (data.id === ChonkyActions.MoveFiles.id) {\r\n          moveFiles(\r\n            data.payload.files,\r\n            data.payload.source,\r\n            data.payload.destination\r\n          );\r\n        } else if (data.id === ChonkyActions.CreateFolder.id) {\r\n          const folderName = prompt(\"Provide the name for your new folder:\");\r\n          if (folderName) createFolder(folderName);\r\n        } else if (data.id === ChonkyActions.ToggleDarkMode.id) {\r\n          toggleDarkMode();\r\n        } else if (data.id === \"view\") {\r\n          let fileNames = data.state.selectedFiles.map((item) => item.name);\r\n          let dirPath = folderChain.map((item) => item.name).join(\"/\");\r\n\r\n          for (let name of fileNames) {\r\n            console.log(`${dirPath}/${name}`);\r\n          }\r\n        } else if (data.id === \"upload\") {\r\n          fileInputRef.current.click();\r\n        } \r\n\r\n        console.log(data);\r\n      },\r\n      [createFolder, deleteFiles, moveFiles, setCurrentFolderId, toggleDarkMode]\r\n    );\r\n  };\r\n\r\n  const {\r\n    fileMap,\r\n    currentFolderId,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    createFile,\r\n  } = useCustomFileMap();\r\n\r\n  setChonkyDefaults({ iconComponent: ChonkyIconFA });\r\n\r\n  const files = useFiles(fileMap, currentFolderId);\r\n  const folderChain = useFolderChain(fileMap, currentFolderId);\r\n  const handleFileAction = useFileActionHandler(\r\n    folderChain,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    toggleDarkMode,\r\n    fileInputRef\r\n  );\r\n\r\n  const fileActions = useMemo(\r\n    () => [\r\n      ...customActions,\r\n      ChonkyActions.CreateFolder,\r\n      ChonkyActions.DeleteFiles,\r\n      // ChonkyActions.CopyFiles,\r\n      // ChonkyActions.UploadFiles,\r\n      // ChonkyActions.DownloadFiles,\r\n      ChonkyActions.ToggleDarkMode,\r\n    ],\r\n    []\r\n  );\r\n\r\n  const thumbnailGenerator = useCallback(\r\n    (file) =>\r\n      file.thumbnailUrl ? `https://chonky.io${file.thumbnailUrl}` : null,\r\n    []\r\n  );\r\n\r\n  const fileUpload = async (e) => {\r\n    let files = e.target.files;\r\n    for (let file of files) {\r\n      if (file === undefined) continue;\r\n\r\n      console.log(file.name); // 파일 이름\r\n\r\n      createFile(file.name);\r\n      // 실제 파일 내용 read\r\n      // let fileReader = new FileReader();\r\n      // fileReader.readAsText(file, \"utf-8\"); // or euc-kr\r\n      // fileReader.onload = function () {\r\n      //   console.log(fileReader.result);\r\n      // };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ m: 2 }}>\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        accept=\".json,.md\"\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        onChange={(e) => fileUpload(e)}\r\n      />\r\n\r\n      <div style={{ height: 400 }}>\r\n        <FullFileBrowser\r\n          files={files}\r\n          folderChain={folderChain}\r\n          fileActions={fileActions}\r\n          onFileAction={handleFileAction}\r\n          thumbnailGenerator={thumbnailGenerator}\r\n          // disableDefaultFileActions={true} // default false\r\n          // doubleClickDelay={500} // ms\r\n          // disableSelection={true} // default false 파일 선택이 해제됨\r\n          // disableDragAndDrop={true} // 드래그 앤 드랍 기능 off\r\n          // disableDragAndDropProvider={true} // default false, Provider : 다른 드래그 앤 드롭은 유지\r\n          // defaultSortActionId={ChonkyActions.SortFilesByDate.id} // SortFilesByName, SortFilesBySize, SortFilesByDate\r\n          // defaultFileViewActionId={ChonkyActions.EnableListView.id} // EnableGridView, EnableListView\r\n          // clearSelectionOnOutsideClick={false} // default true 브라우저 외부 클릭 시 파일 선택 해제\r\n          darkMode={darkMode}\r\n          {...props}\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default ChonkyBrowser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ChonkyBrowser from \"./ChonkyBrowser\";\r\n\r\nimport * as gh from \"./githublibrary.js\";\r\n\r\nconst ChonkyLoader = () => {\r\n  const [chonkyMap, setChonkyMap] = useState(undefined);\r\n\r\n  const getChonkyMap = async () => {\r\n    let result = await gh.fileRead(\"actions/config/chonky_map.json\");\r\n    if (result === undefined) return;\r\n\r\n    let repoMap = JSON.parse(result);\r\n    setChonkyMap(repoMap);\r\n    console.log(repoMap);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChonkyMap();\r\n  }, []);\r\n\r\n  return <div>{chonkyMap && <ChonkyBrowser chonkyMap={chonkyMap} />}</div>;\r\n};\r\n\r\nexport default ChonkyLoader;\r\n","import React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ChatLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [id, setID] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setID(event.target.value);\r\n  };\r\n\r\n  const login = () => {\r\n    if (id === \"\") return;\r\n    console.log(id);\r\n    navigate(\"/chat\", { state: { loginID: id } });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <FormControl sx={{ marginRight: 1, width: 300 }}>\r\n          <InputLabel>ID</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            value={id}\r\n            label=\"ID\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value=\"Lilly\">Lilly</MenuItem>\r\n            <MenuItem value=\"Joe\">Joe</MenuItem>\r\n            <MenuItem value=\"Emily\">Emily</MenuItem>\r\n            <MenuItem value=\"Akane\">Akane</MenuItem>\r\n            <MenuItem value=\"Eliot\">Eliot</MenuItem>\r\n            <MenuItem value=\"Zoe\">Zoe</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Button variant=\"outlined\" onClick={login}>\r\n          Login\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\n\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n  Avatar,\r\n  Sidebar,\r\n  ConversationList,\r\n  Conversation,\r\n  ConversationHeader,\r\n  VoiceCallButton,\r\n  VideoCallButton,\r\n  InfoButton,\r\n  MessageSeparator,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\n\r\nconst AVATAR_IMAGE =\r\n  \"https://img1.daumcdn.net/thumb/C428x428/?scode=mtistory2&fname=https%3A%2F%2Ftistory3.daumcdn.net%2Ftistory%2F4431109%2Fattach%2F3af65be1d8b64ece859b8f6d07fafadc\";\r\n\r\nconst AVATAR_MAP = {\r\n  Lilly: \"https://chatscope.io/storybook/react/assets/lilly-aj6lnGPk.svg\",\r\n  Joe: \"https://chatscope.io/storybook/react/assets/joe-v8Vy3KOS.svg\",\r\n  Emily: \"https://chatscope.io/storybook/react/assets/emily-xzL8sDL2.svg\",\r\n  Akane: \"https://chatscope.io/storybook/react/assets/akane-MXhWvx63.svg\",\r\n  Eliot: \"https://chatscope.io/storybook/react/assets/eliot-JNkqSAth.svg\",\r\n  Zoe: \"https://chatscope.io/storybook/react/assets/zoe-E7ZdmXF0.svg\",\r\n};\r\n\r\nconst defaultMessage = [];\r\nconst defaultMessagePatrik = [];\r\nconst totalMessages = [defaultMessage, defaultMessagePatrik];\r\n\r\nconst defaultConversation = [\r\n  {\r\n    info: \"\",\r\n    lastSenderName: \"bloodstrawberry\",\r\n    name: \"bloodstrawberry\",\r\n    src: AVATAR_IMAGE,\r\n    status: \"available\",\r\n  },\r\n  {\r\n    info: \"\",\r\n    lastSenderName: \"Patrik\",\r\n    name: \"Patrik\",\r\n    src: \"https://chatscope.io/storybook/react/assets/patrik-yC7svbAR.svg\",\r\n    status: \"invisible\",\r\n  },\r\n];\r\n\r\nconst ChatUI = () => {\r\n  const location = useLocation();\r\n  const [loginID, setLoginID] = useState(\"\");\r\n\r\n  const [activeID, setActiveID] = useState(0);\r\n  const [messages, setMessages] = useState(totalMessages);\r\n\r\n  const getMessageComponent = (totalMessages) => {\r\n    let data = totalMessages[activeID];\r\n\r\n    return data.map((item, index) => {\r\n      return item.type === \"separator\" ? (\r\n        <MessageSeparator content={item.content} />\r\n      ) : (\r\n        <Message key={index} model={item.model}>\r\n          {item.avatar ? (\r\n            <Avatar src={item.avatar.src} name={item.avatar.name} />\r\n          ) : null}\r\n        </Message>\r\n      );\r\n    });\r\n  };\r\n\r\n  const changeRoom = (index) => {\r\n    if(activeID === index) return;\r\n    \r\n    let leftSeparator = {\r\n      type : \"separator\",\r\n      content : `${loginID} has left the chatroom.`,\r\n    }\r\n\r\n    let enterSeparator = {\r\n      type : \"separator\",\r\n      content : `${loginID} has entered the chatroom.`,\r\n    }\r\n\r\n    let temp = [...totalMessages];\r\n    temp[activeID].push(leftSeparator);\r\n    temp[index].push(enterSeparator);\r\n\r\n    setMessages(temp);\r\n    setActiveID(index);\r\n  }\r\n\r\n  const getConversationComponent = (data) => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <Conversation\r\n          key={index}\r\n          active={index === activeID}\r\n          info={item.info}\r\n          lastSenderName={item.lastSenderName}\r\n          name={item.name}\r\n          onClick={() => changeRoom(index)}\r\n        >\r\n          <Avatar name={item.name} src={item.src} status={item.status} />\r\n        </Conversation>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSend = (input) => {\r\n    let newMessage = {\r\n      model: {\r\n        message: input,\r\n        direction: \"outgoing\",\r\n      },\r\n    };\r\n\r\n    let temp = [...totalMessages];\r\n    temp[activeID].push(newMessage);\r\n    setMessages(temp);\r\n  };\r\n\r\n  const init = () => {\r\n    setLoginID(location.state.loginID);\r\n\r\n    let enterSeparator = {\r\n      type : \"separator\",\r\n      content : `${location.state.loginID} has entered the chatroom.`,\r\n    }\r\n\r\n    let temp = [...totalMessages];\r\n    temp[activeID].push(enterSeparator);\r\n\r\n    setMessages(temp);    \r\n  };\r\n\r\n  useEffect(init, []);\r\n\r\n  return (\r\n    <div>\r\n      <Conversation\r\n        info=\"I'm fine, thank you, and you?\"\r\n        lastSenderName={loginID}\r\n        name={loginID}\r\n      >\r\n        <Avatar name={loginID} src={AVATAR_MAP[loginID]} status=\"available\" />\r\n      </Conversation>\r\n      <MessageSeparator style={{ marginTop: 5, marginBottom: 5 }} />\r\n      <MainContainer\r\n        responsive\r\n        style={{\r\n          height: \"600px\",\r\n        }}\r\n      >\r\n        <Sidebar position=\"left\">\r\n          <ConversationList>\r\n            {getConversationComponent(defaultConversation)}\r\n          </ConversationList>\r\n        </Sidebar>\r\n        <ChatContainer>\r\n          <ConversationHeader>\r\n            <ConversationHeader.Back />\r\n            <Avatar\r\n              name={defaultConversation[activeID].name}\r\n              src={defaultConversation[activeID].src}\r\n            />\r\n            {activeID === 0 ? (\r\n              <ConversationHeader.Content\r\n                info=\"Active 10 mins ago\"\r\n                userName=\"bloodstrawberry\"\r\n              />\r\n            ) : (\r\n              <ConversationHeader.Content\r\n                info=\"Active 7 hours ago\"\r\n                userName=\"Patrik\"\r\n              />\r\n            )}\r\n            <ConversationHeader.Actions>\r\n              <VoiceCallButton />\r\n              <VideoCallButton />\r\n              <InfoButton />\r\n            </ConversationHeader.Actions>\r\n          </ConversationHeader>\r\n          <MessageList>\r\n            {getMessageComponent(messages)}\r\n          </MessageList>\r\n\r\n          <MessageInput placeholder=\"Type message here\" onSend={handleSend} />\r\n        </ChatContainer>\r\n      </MainContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatUI;\r\n","//App.js\nimport React from \"react\";\n\nimport { Route, Link, Routes } from \"react-router-dom\";\n\n//routing components\nimport Home from \"./page/Home\";\nimport MyHandsonTable from \"./page/MyHandsonTable\";\nimport MyCKEditor from \"./page/MyCKEditor\";\nimport MyDiffViewer from \"./page/MyDiffViewer\";\nimport TabEditor from \"./page/TabEditor\";\n\nimport \"./App.css\";\nimport Floating from \"./page/Floating\";\nimport MyEncrypt from \"./page/MyEncrypt\";\nimport ToastUIEditor from \"./page/ToastUIEditor\";\nimport ChonkyLoader from \"./page/ChonkyLoader\";\n\nimport ChatLogin from \"./ChatLogin\";\nimport ChatUI from \"./page/ChatUI\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"router\">\n        <span>\n          <Link to=\"/myHandsTable\">HandsOnTable</Link>\n        </span>\n        {/* <span>\n          <Link to=\"/ck-editor\">CK Editor</Link>\n        </span> */}\n        <span>\n          <Link to=\"/tui-editor\">Toast UI</Link>\n        </span>        \n        <span>\n          <Link to=\"/diff-viewer\">Diff Viewer</Link>\n        </span>\n        <span>\n          <Link to=\"/tabs\">Tabs</Link>\n        </span>\n        <span>\n          <Link to=\"/floating\">Floating</Link>\n        </span>\n        <span>\n          <Link to=\"/encrypt\">Encrypt</Link>\n        </span>\n        <span>\n          <Link to=\"/filebrowser\">File Browser</Link>\n        </span>\n        <span>\n          <Link to=\"/chat-login\">Chat Room</Link>\n        </span>        \n      </div>\n      <div>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/myHandsTable\" element={<MyHandsonTable />} />\n          <Route path=\"/ck-editor\" element={<MyCKEditor />} />\n          <Route path=\"/tui-editor\" element={<ToastUIEditor />} />\n          \n          <Route path=\"/diff-viewer\" element={<MyDiffViewer />} />\n          <Route path=\"/tabs\" element={<TabEditor />} />        \n          <Route path=\"/floating\" element={<Floating />} />       \n          <Route path=\"/encrypt\" element={<MyEncrypt />} />                 \n          <Route path=\"/filebrowser\" element={<ChonkyLoader />} />                 \n          \n          <Route path=\"/chat-login\" element={<ChatLogin />} />                                        \n          <Route path=\"/chat\" element={<ChatUI />} />                              \n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}