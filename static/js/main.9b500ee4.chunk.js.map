{"version":3,"sources":["page/Home.js","page/HandsontableToggleButton.js","page/CustomHansOnTable.js","page/MyHandsonTable.js","page/MyCKEditor.js","page/MyDiffViewer.js","page/TabEditor.js","page/Floating.js","page/MyEncrypt.js","page/myCustomActions.js","page/ChonkyBrowser.js","page/ChatUI.js","page/githublibrary.js","page/ToastUIEditor.js","page/ChonkyLoader.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","StyledToggleButtonGroup","styled","ToggleButtonGroup","_ref","theme","& .MuiToggleButtonGroup-grouped","margin","spacing","border","&.Mui-disabled","&:not(:first-of-type)","borderRadius","shape","&:first-of-type","HandsontableToggleButton","_ref2","myHandsOnTable","selectedCell","_useState","useState","_useState2","_slicedToArray","horizontalAlignment","setHorizontalAlignment","_useState3","_useState4","verticalAlignment","setVerticalAlignment","_useState5","_useState6","formats","setFormats","_useState7","_useState8","showCompactPicker","setShowCompactPicker","_useState9","top","left","_useState10","pickerPosition","setPickerPosition","_useState11","_useState12","fontColor","setFontColor","_useState13","_useState14","bgColor","setBgColor","getCellInfoRange","selecetedRangeCells","getSelectedRange","undefined","_step","cellPositions","_iterator","_createForOfIteratorHelper","s","n","done","cell","value","r","from","row","to","c","col","push","err","e","f","getHorizontalStatus","className","status","split","filter","item","includes","getVerticalStatus","handleAlignment","event","newAlignment","type","console","log","_step2","_iterator2","_loop","pos","cellInfo","getCell","horizontal","vertical","join","handleToggleCompactPicker","rect","currentTarget","getBoundingClientRect","pickerTop","bottom","window","scrollY","pickerLeft","scrollX","prev","handleChangeComplete","color","colorType","hex","_step4","_iterator4","style","backgroundColor","setButtonState","baseCell","getCellInfoBase","fontWeight","fontStyle","textDecoration","concat","_toConsumableArray","useEffect","Box","sx","m","marginBottom","Paper","elevation","display","palette","divider","flexWrap","width","size","exclusive","onChange","alignment","aria-label","ToggleButton","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","VerticalAlignTopIcon","VerticalAlignCenterIcon","VerticalAlignBottomIcon","Divider","flexItem","orientation","mx","my","newFormats","_step3","_iterator3","deco","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatStrikethroughIcon","onClick","ColorizeIcon","ArrowDropDownIcon","FormatColorFillIcon","position","zIndex","right","fms","CompactPicker","onChangeComplete","getColorPicker","DisplayCellStyle","div","_templateObject","_taggedTemplateLiteral","data","CustomHansOnTable","myTable","myOptions","setMyHandsOnTable","displayCellInfo","setDisplaySetInfo","setSelectedCell","getComments","comments","localStorage","getItem","JSON","parse","getMergeCells","mergeCells","localCellStyle","options","colHeaders","rowHeaders","wordWrap","manualColumnResize","manualRowResize","manualColumnMove","manualRowMove","allowInsertColumn","allowInsertRow","allowRemoveColumn","allowRemoveRow","autoWrapCol","autoWrapRow","dragToScroll","persistentState","outsideClickDeselects","readOnly","enterBeginsEditing","copyable","copyPaste","undo","trimWhitespace","contextMenu","manualColumnFreeze","observeChanges","afterChangesObserved","height","startCols","startRows","afterSelection","selectedLast","getSelectedLast","getValue","colWidths","rowHeights","afterSetCellMeta","key","obj","temp","comment","setItem","stringify","afterUnmergeCells","cellRange","auto","cells","prop","cellProperties","renderer","instance","td","Handsontable","renderers","TextRenderer","apply","this","arguments","licenseKey","setColWidths","table","setOptions","colLength","getData","length","widths","i","getColWidth","setRowHeights","rowLength","heights","getRowHeight","container","document","getElementById","innerHTML","_objectSpread","trueFalseOptions","numberOptions","addHook","mergeParent","getCellMeta","spanned","localOptions","Array","isArray","render","makeTable","changeFormat","toString","replace","Button","variant","csv","map","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","id","marginTop","myDefaultOptions","maxCols","maxRows","minCols","minRows","minSpareRows","minSpareCols","fixedColumnsLeft","fixedRowsTop","fixedRowsBottom","rowHeaderWidth","MyHandsonTable","setMyOptions","state","setState","toggleDrawer","anchor","open","_defineProperty","makeTrueFalseCheckBox","pair","Object","entries","Boolean","idx","FormControlLabel","control","Checkbox","checked","label","option","changeTrueFalseOptions","makeNumberInput","Number","FormControl","InputLabel","htmlFor","Input","isNaN","changeNumberOptions","target","initLocalStorage","Fragment","Drawer","onClose","flexDirection","FormHelperText","MyCKEditor","CKEditor","editor","ClassicEditor","onReady","onBlur","onFocus","MyDiffViewer","oldCode","setOldCode","newCode","setNewCode","splitView","setSplitView","DiffMethod","CHARS","diffMethod","setDiffMethod","selected","CheckIcon","justifyContent","alignItems","Textarea","name","placeholder","ReactDiffViewer","oldValue","newValue","compareMethod","Select","labelId","MenuItem","TextAreaTabPanel","props","children","index","tabs","setTabs","other","_objectWithoutProperties","assign","role","hidden","aria-labelledby","p","content","updatedTabs","TabEditor","title","activeTab","setActiveTab","editIndex","setEditIndex","changeTabTitle","newTitle","handleTabContextMenu","preventDefault","Swal","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","tab","Math","max","deleteTab","borderBottom","borderColor","Tabs","scrollButtons","Tab","autoFocus","select","trim","handleTitleBlur","outline","onDoubleClick","onContextMenu","AddIcon","blue","grey","TriggerButton","mode","StyledSnackbar","Snackbar","SnackbarContent","positioningStyles","entering","entered","exiting","exited","unmounted","Floating","showAlert","setShowAlert","floatingMessage","setFloatingMessage","setOpen","setExited","nodeRef","useRef","handleClose","_","reason","timer","setTimeout","clearTimeout","paragraphs","handleButtonClick","autoHideDuration","Transition","timeout","enter","exit","in","appear","unmountOnExit","onEnter","onExited","transform","transition","ref","CloseIcon","Alert","severity","opacity","EncryptionComponent","inputText1","setInputText1","inputText2","setInputText2","encryptedAESText","setEncryptedAESText","decryptedAESText","setDecryptedAESText","hashedText","setHashedText","TextField","encrypted","CryptoJS","AES","encrypt","decrypted","decrypt","enc","Utf8","hashed","SHA256","uploadFileAction","defineFileAction","button","toolbar","ChonkyIconName","upload","customActions","requiresSelection","fileFilter","file","isDir","_regeneratorRuntime","t","prototype","hasOwnProperty","o","defineProperty","Symbol","a","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","allowArrayLike","it","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr","len","arr2","ChonkyBrowser","memo","darkMode","setDarkMode","fileInputRef","demoMap","useNavigate","chonkyMap","prepareCustomFileMap","baseFileMap","fileMap","rootFolderId","_useCustomFileMap","_useMemo","useMemo","setFileMap","currentFolderId","setCurrentFolderId","resetFileMap","useCallback","currentFolderIdRef","current","deleteFiles","files","currentFileMap","newFileMap","parentId","parent","newChildrenIds","childrenIds","childrenCount","moveFiles","source","destination","moveFileIds","Set","newSourceChildrenIds","has","newDestinationChildrenIds","idCounter","createFolder","folderName","newFolderId","modDate","Date","createFile","fileName","useCustomFileMap","setChonkyDefaults","iconComponent","ChonkyIconFA","fileId","useFiles","folderChain","currentFolder","parentFile","unshift","useFolderChain","handleFileAction","toggleDarkMode","ChonkyActions","OpenFiles","_data$payload","payload","targetFile","fileToOpen","FileHelper","isDirectory","endsWith","fileNames","selectedFiles","dirPath","filePath","DeleteFiles","selectedFilesForAction","MoveFiles","CreateFolder","prompt","ToggleDarkMode","useFileActionHandler","fileActions","thumbnailGenerator","thumbnailUrl","fileUpload","_asyncToGenerator","_callee","_context","t0","_x","accept","multiple","FullFileBrowser","onFileAction","ChatUI","MainContainer","ChatContainer","MessageList","Message","model","direction","Avatar","src","CustomContent","message","sentTime","MessageInput","onSend","myKey","process","replaceAll","fileRead","path","octokit","Octokit","auth","request","owner","repo","encoding","decoding","decodeURIComponent","escape","atob","colorSyntaxOptions","preset","ToastEditor","useLocation","editorRef","editMode","setEditMode","initData","init","viewer","gh","removeItem","Viewer","el","querySelector","usageStatistics","plugins","tableMergedCell","setMarkdown","getInstance","markDownContent","getMarkdown","htmlContent","getHTML","disabled","Editor","previewStyle","initialEditType","toolbarItems","colorSyntax","ChonkyLoader","setChonkyMap","getChonkyMap","repoMap","App","Link","Routes","Route","element","ToastUIEditor","MyEncrypt","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.9b500ee4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport FormatAlignLeftIcon from \"@mui/icons-material/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@mui/icons-material/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\n//import FormatAlignJustifyIcon from \"@mui/icons-material/FormatAlignJustify\";\r\nimport VerticalAlignBottomIcon from \"@mui/icons-material/VerticalAlignBottom\";\r\nimport VerticalAlignCenterIcon from \"@mui/icons-material/VerticalAlignCenter\";\r\nimport VerticalAlignTopIcon from \"@mui/icons-material/VerticalAlignTop\";\r\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\r\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\r\nimport FormatStrikethroughIcon from \"@mui/icons-material/FormatStrikethrough\";\r\nimport FormatColorFillIcon from \"@mui/icons-material/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport ColorizeIcon from \"@mui/icons-material/Colorize\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nimport { CompactPicker } from \"react-color\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n  \"& .MuiToggleButtonGroup-grouped\": {\r\n    margin: theme.spacing(0.5),\r\n    border: 0,\r\n    \"&.Mui-disabled\": {\r\n      border: 0,\r\n    },\r\n    \"&:not(:first-of-type)\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"&:first-of-type\": {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HandsontableToggleButton = ({ myHandsOnTable, selectedCell }) => {\r\n  const [horizontalAlignment, setHorizontalAlignment] = useState(\"\");\r\n  const [verticalAlignment, setVerticalAlignment] = useState(\"\");\r\n  const [formats, setFormats] = useState(() => []);\r\n\r\n  const [showCompactPicker, setShowCompactPicker] = useState(false);\r\n  const [pickerPosition, setPickerPosition] = useState({ top: 0, left: 0 });\r\n  const [fontColor, setFontColor] = useState(\"#000000\");\r\n  const [bgColor, setBgColor] = useState(\"#FFFFFF\");\r\n\r\n  const getCellInfoBase = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let baseCell = selecetedRangeCells[0].from;\r\n    return myHandsOnTable.getCell(baseCell.row, baseCell.col);\r\n  };\r\n\r\n  const getCellInfoRange = () => {\r\n    let selecetedRangeCells = myHandsOnTable.getSelectedRange();\r\n    if (selecetedRangeCells === undefined) return undefined;\r\n\r\n    let cellPositions = [];\r\n    for (let cell of selecetedRangeCells) {\r\n      for (let r = cell.from.row; r <= cell.to.row; r++) {\r\n        for (let c = cell.from.col; c <= cell.to.col; c++)\r\n          cellPositions.push([r, c]);\r\n      }\r\n    }\r\n\r\n    return cellPositions;\r\n  };\r\n\r\n  const getHorizontalStatus = (className) => {\r\n    let status = [\"htLeft\", \"htCenter\", \"htRight\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const getVerticalStatus = (className) => {\r\n    let status = [\"htTop\", \"htMiddle\", \"htBottom\"];\r\n    let current = className.split(\" \");\r\n\r\n    return current.filter((item) => status.includes(item))[0];\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment, type) => {\r\n    console.log(newAlignment, type);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    if (type === \"horizontal\") setHorizontalAlignment(newAlignment);\r\n    else if (type === \"vertical\") setVerticalAlignment(newAlignment);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n      let className = cellInfo.className;\r\n      let split = className.split(\" \");\r\n      if (type === \"horizontal\") {\r\n        let horizontal = getHorizontalStatus(className);\r\n        split = split.filter((item) => item !== horizontal); // 현재 설정 값 삭제\r\n      } else if (type === \"vertical\") {\r\n        let vertical = getVerticalStatus(className);\r\n        split = split.filter((item) => item !== vertical); // 현재 설정 값 삭제\r\n      }\r\n\r\n      if (newAlignment) split.push(newAlignment); // 새로 설정된 값 추가.\r\n\r\n      cellInfo.className = split.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    console.log(newFormats);\r\n\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    setFormats(newFormats);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      cellInfo.style.fontWeight = newFormats.includes(\"bold\") ? \"bold\" : \"\";\r\n      cellInfo.style.fontStyle = newFormats.includes(\"italic\") ? \"italic\" : \"\";\r\n\r\n      let deco = [];\r\n      if (newFormats.includes(\"underline\")) deco.push(\"underline\");\r\n      if (newFormats.includes(\"line-through\")) deco.push(\"line-through\");\r\n\r\n      cellInfo.style.textDecoration = deco.join(\" \");\r\n    }\r\n  };\r\n\r\n  const handleToggleCompactPicker = (event, type) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    const iconButton = event.currentTarget;\r\n    const rect = iconButton.getBoundingClientRect();\r\n    const pickerTop = rect.bottom + window.scrollY;\r\n    const pickerLeft = rect.left + window.scrollX;\r\n\r\n    setPickerPosition({ top: pickerTop, left: pickerLeft });\r\n    setShowCompactPicker((prev) => !prev);\r\n  };\r\n\r\n  const handleChangeComplete = (color, event) => {\r\n    let cellPositions = getCellInfoRange();\r\n    if (cellPositions === undefined) return;\r\n\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n\r\n    console.log(colorType, color.hex);\r\n\r\n    if (colorType === \"fontColor\") setFontColor(color.hex);\r\n    else setBgColor(color.hex);\r\n\r\n    for (let pos of cellPositions) {\r\n      let cellInfo = myHandsOnTable.getCell(pos[0], pos[1]);\r\n\r\n      if (colorType === \"fontColor\") {\r\n        cellInfo.style.color = color.hex;\r\n      } else {\r\n        cellInfo.style.backgroundColor = color.hex;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getColorPicker = () => {\r\n    let colorType = formats.includes(\"fontColor\") ? \"fontColor\" : \"bgColor\";\r\n    return (\r\n      <CompactPicker\r\n        color={colorType === \"fontColor\" ? fontColor : bgColor}\r\n        onChangeComplete={handleChangeComplete}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    let fms = formats.filter(\r\n      (item) => (item === \"fontColor\" || item === \"bgColor\") === false\r\n    );\r\n    setFormats(fms);\r\n\r\n    setShowCompactPicker(false);\r\n  };\r\n\r\n  const setButtonState = () => {\r\n    if (myHandsOnTable === undefined) return;\r\n\r\n    let cellInfo = getCellInfoBase();\r\n    let className = cellInfo.className;\r\n    let horizontal = getHorizontalStatus(className) || \"\"; // undefined 처리\r\n    let vertical = getVerticalStatus(className) || \"\";\r\n\r\n    setHorizontalAlignment(horizontal);\r\n    setVerticalAlignment(vertical);\r\n\r\n    let fontWeight = cellInfo.style.fontWeight;\r\n    let fontStyle = cellInfo.style.fontStyle;\r\n    let textDecoration = cellInfo.style.textDecoration.split(\" \");\r\n\r\n    setFormats([fontWeight, fontStyle, ...textDecoration]);\r\n    setFontColor(cellInfo.style.color);\r\n    setBgColor(cellInfo.style.backgroundColor);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonState();\r\n  }, [selectedCell]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2, marginBottom: 5 }}>\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            display: \"flex\",\r\n            border: (theme) => `1px solid ${theme.palette.divider}`,\r\n            flexWrap: \"wrap\",\r\n            width: \"700px\",\r\n          }}\r\n        >\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={horizontalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"horizontal\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htLeft\" aria-label=\"left aligned\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htCenter\" aria-label=\"centered\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htRight\" aria-label=\"right aligned\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            {/* <ToggleButton value=\"justify\" aria-label=\"justified\">\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton> */}\r\n          </StyledToggleButtonGroup>\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={verticalAlignment}\r\n            exclusive\r\n            onChange={(e, alignment) =>\r\n              handleAlignment(e, alignment, \"vertical\")\r\n            }\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"htTop\" aria-label=\"top aligned\">\r\n              <VerticalAlignTopIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htMiddle\" aria-label=\"middle\">\r\n              <VerticalAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"htBottom\" aria-label=\"bottom aligned\">\r\n              <VerticalAlignBottomIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n\r\n          <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n\r\n          <StyledToggleButtonGroup\r\n            size=\"small\"\r\n            value={formats}\r\n            onChange={handleFormat}\r\n            aria-label=\"text formatting\"\r\n          >\r\n            <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underline\" aria-label=\"underline\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line-through\" aria-label=\"line-through\">\r\n              <FormatStrikethroughIcon />\r\n            </ToggleButton>\r\n\r\n            <ToggleButton\r\n              value=\"fontColor\"\r\n              aria-label=\"fontColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"fontColor\")}\r\n            >\r\n              <ColorizeIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"bgColor\"\r\n              aria-label=\"bgColor\"\r\n              onClick={(e) => handleToggleCompactPicker(e, \"bgColor\")}\r\n            >\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </StyledToggleButtonGroup>\r\n        </Paper>\r\n\r\n        {showCompactPicker && (\r\n          <div\r\n            className=\"compact-picker-container\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: pickerPosition.top + \"px\",\r\n              left: pickerPosition.left + \"px\",\r\n              zIndex: 1000,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"fixed\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                bottom: \"0px\",\r\n                left: \"0px\",\r\n              }}\r\n              onClick={handleClose}\r\n            />\r\n            {getColorPicker()}\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HandsontableToggleButton;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport Handsontable from \"handsontable\";\r\nimport \"handsontable/dist/handsontable.full.min.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport styled from \"styled-components\";\r\nimport HandsontableToggleButton from \"./HandsontableToggleButton\";\r\n\r\nconst DisplayCellStyle = styled.div`\r\n  span {\r\n    background-color: #33ceff;\r\n    position: relative;\r\n    padding: 0.4rem 0.85rem;\r\n    border: 1px solid transparent;\r\n    border-radius: 0.35rem;\r\n  }\r\n`;\r\n\r\n// const data = [\r\n//   [\"\", \"Tesla\", \"Nissan\", \"Toyota\", \"Honda\", \"Mazda\", \"Ford\"],\r\n//   [\"2017\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2018\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2019\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2020\", 10, 11, 12, 13, 15, 16],\r\n//   [\"2021\", 10, 11, 12, 13, 15, 16],\r\n// ];\r\n\r\nconst data = [\r\n  [\"\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"],\r\n  [\"Tesla\", 10, 5, 5, 10, 14, 5],\r\n  [\"Nissan\", 15, 2, 7, 11, 13, 4],\r\n  [\"Toyota\", 11, 1, 10, 12, 12, 3],\r\n  [\"Honda\", 5, 3, 7, 13, 11, 4],\r\n  [\"Mazda\", 4, 7, 5, 14, 10, 4],\r\n];\r\n\r\n// dummy data for test\r\n// const initData = () => {\r\n//   let row = [];\r\n//   for (let i = 0; i < 100; i++) {\r\n//     row.push(String.fromCharCode(\"A\".charCodeAt() + (i % 26)));\r\n//   }\r\n\r\n//   let table = [];\r\n//   for (let k = 0; k < 100; k++) {\r\n//     let tmp = JSON.parse(JSON.stringify(row));\r\n//     let number = `${k + 1}`;\r\n//     for (let i = 0; i < 100; i++)\r\n//       tmp[i] = `${tmp[i]}${number.padStart(3, \"0\")}`;\r\n//     table.push(tmp);\r\n//   }\r\n\r\n//   return table;\r\n// };\r\n\r\n// let searchResultCount = 0;\r\n// function searchResultCounter(instance, row, col, value, result) {\r\n//   const DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {\r\n//     instance.getCellMeta(row, col).isSearchResult = testResult;\r\n//   };\r\n\r\n//   DEFAULT_CALLBACK.apply(this, arguments);\r\n\r\n//   if (result) {\r\n//     searchResultCount++;\r\n//   }\r\n// }\r\n\r\n// function redRenderer(instance, td) {\r\n//   Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n//   td.style.backgroundColor = \"red\";\r\n//   td.style.fontWeight = \"bold\";\r\n// }\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\nconst COMMENTS_KEY = \"COMMENTS_KEY\";\r\nconst MERGE_CELLS_KEY = \"MERGE_CELLS_KEY\";\r\nconst CELL_STYLE_KEY = \"CELL_STYLE_KEY\";\r\n\r\nconst CustomHansOnTable = ({ myOptions }) => {\r\n  const [myHandsOnTable, setMyHandsOnTable] = useState();\r\n  const [displayCellInfo, setDisplaySetInfo] = useState(\"\");\r\n  const [selectedCell, setSelectedCell] = useState([0, 0]);\r\n\r\n  const getComments = () => {\r\n    let comments = localStorage.getItem(COMMENTS_KEY);\r\n\r\n    if (comments === null) return [];\r\n\r\n    return JSON.parse(comments);\r\n  };\r\n\r\n  const getMergeCells = () => {\r\n    let mergeCells = localStorage.getItem(MERGE_CELLS_KEY);\r\n\r\n    if (mergeCells === null) return [];\r\n\r\n    return JSON.parse(mergeCells);\r\n  };\r\n\r\n  // const myNewQueryMethod = (searchValue, dataValue) => {\r\n  //   if (!searchValue) return false;\r\n\r\n  //   dataValue = dataValue || \"\";\r\n  //   return searchValue.toString() === dataValue.toString();\r\n  // };\r\n\r\n  const cellSelected = () => {\r\n    let selectedLast = myTable.getSelectedLast();\r\n\r\n    if (selectedLast[0] < 0 || selectedLast[1] < 0) return;\r\n\r\n    let value = myTable.getValue() || \"\";\r\n    setDisplaySetInfo(value);\r\n\r\n    setSelectedCell([selectedLast[0], selectedLast[1]]);\r\n  };\r\n\r\n  const localCellStyle = localStorage.getItem(CELL_STYLE_KEY)\r\n    ? JSON.parse(localStorage.getItem(CELL_STYLE_KEY))\r\n    : null;\r\n\r\n  const options = {\r\n    data, // initData(),\r\n\r\n    /* true or false options */\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n\r\n    observeChanges: true,\r\n    afterChangesObserved: () => {\r\n      //console.log(\"change !!\");\r\n    },\r\n\r\n    // filters: true, /* 필터 기능 on 6.2.2 pro  */,\r\n    // dropdownMenu: true, /* dropdown 메뉴 설정 6.2.2 pro */\r\n\r\n    /* Selected Options */\r\n    className: \"htMiddle htCenter\" /* Cell Alignment */,\r\n    // stretchH: \"none\", /* 빈 공간을 채우는 방법 : none, last, all */\r\n    // selectionMode: \"multiple\", /* Ctrl 키 + 선택 가능한 셀 : multiple, range, single */\r\n    // fillHandle : true, /* 드래그로 자동 채움 : true, false, vertical, horizontal 옵션 */\r\n    // disableVisualSelection: \"current\", /* 셀 선택 활성화 여부 : false, true, current, area, header, [option1, option2, ...] */\r\n\r\n    /* Number Options */\r\n    width: 1000,\r\n    height: 1000,\r\n\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 3 /* data가 없는 경우 기본 설정 */,\r\n    afterSelection: cellSelected,\r\n    // maxCols: 2, /* 주어진 값보다 큰 Column은 제거 */\r\n    // maxRows: 3, /* 주어진 값보다 큰 Row는 제거 */\r\n    // minCols: 10, /* 최소한의 Column */\r\n    // minRows: 10, /* 최소한의 Row */\r\n    // minSpareRows: 1, /* 빈 열 자동 추가 */\r\n    // minSpareCols: 2, /* 빈 행 자동 추가 */\r\n    // fixedColumnsLeft: 2,\r\n    // fixedRowsTop: 3,\r\n    // fixedRowsBottom: 2,\r\n    // rowHeaderWidth: 250, /* 행 헤더 너비 */\r\n\r\n    /* Customizing Options */\r\n    colWidths: 60 /* 특정 위치 너비 변경 : [60, 120, 60, 60, 60, 60, 60] */,\r\n    rowHeights: 25,\r\n    // placeholder: 'Empty',\r\n    // columnSorting: {\r\n    //   indicator: true, /* default true, 정렬 순서 표시 마크 (↑↓) on / off */\r\n    //   sortEmptyCells: true, /* true : 빈 셀도 정렬, false : 모든 빈 셀은 테이블 끝으로 이동 */\r\n    //   headerAction: true, /* default true, 헤더 클릭 시 정렬 기능 on / off */\r\n    //   initialConfig: {\r\n    //     column: 2, /* column : 2를 기준으로 정렬 */\r\n    //     sortOrder: \"asc\", /* 내림차순 desc */\r\n    //   },\r\n\r\n    //   /* 비교함수 구현. -1, 0, 1을 return. */\r\n    //   // compareFunctionFactory: function(sortOrder, columnMeta) {\r\n    //   //   return function(value, nextValue) {\r\n    //   //     if(value > 2000) return -1;\r\n    //   //     return value - nextValue;\r\n    //   //   }\r\n    //   // },\r\n    // },\r\n\r\n    // comments: {\r\n    //   displayDelay: 1000 /* 1초 뒤에 메모가 on */,\r\n    // },\r\n\r\n    cell: getComments(),\r\n    afterSetCellMeta: (row, col, key, obj) => {\r\n      if (key === \"comment\") {\r\n        // 기존 데이터 삭제\r\n        let temp = getComments().filter(\r\n          (item) => (item.row === row && item.col === col) === false\r\n        );\r\n        if (obj !== undefined)\r\n          temp.push({ row, col, comment: { value: obj.value } });\r\n        localStorage.setItem(COMMENTS_KEY, JSON.stringify([...temp]));\r\n      }\r\n    },\r\n\r\n    // 6.2.2 미지원\r\n    // beforeSetCellMeta:(row, col, key, value) => {\r\n    //   console.log(\"before\",row, col, key, value);\r\n    // },\r\n\r\n    // afterChange: function(change, source) {\r\n    //   console.log(change, source);\r\n    //   //change [row, col, before, after];\r\n    // },\r\n\r\n    mergeCells: getMergeCells(),\r\n    afterUnmergeCells: (cellRange, auto) => {\r\n      let temp = getMergeCells().filter(\r\n        (item) =>\r\n          (item.row === cellRange.from.row &&\r\n            item.col === cellRange.from.col) === false\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    },\r\n\r\n    // search: {\r\n    //   callback: searchResultCounter,\r\n    //   queryMethod: myNewQueryMethod,\r\n    //   //searchResultClass: 'customClass'\r\n    // },\r\n\r\n    // columns: [\r\n    //     {data: \"id\", type: 'numeric'},\r\n    //     {data: \"name\", renderer: redRenderer},\r\n    //     {data: \"isActive\", type: 'checkbox'},\r\n    //     {data: \"date\", type: 'date', dateFormat: 'YYYY-MM-DD'},\r\n    //     {data: \"color\",\r\n    //       type: 'autocomplete', // dropdown\r\n    //       source: [\"yellow\", \"red\", \"orange\", \"green\", \"blue\", \"gray\", \"black\", \"white\"]\r\n    //     },\r\n    //     {\r\n    //       editor: 'select',\r\n    //       selectOptions: ['Kia', 'Nissan', 'Toyota', 'Honda']\r\n    //     },\r\n    //   ],\r\n    \r\n    cells: function(row, col, prop) {\r\n      if (localCellStyle === null) return {};\r\n\r\n      let cellProperties = {};\r\n\r\n      cellProperties.className =\r\n        localCellStyle[row][col].className || \"htCenter htMiddle\"; // undefined 처리\r\n\r\n      cellProperties.renderer = function(instance, td) {\r\n        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n        td.style.fontWeight = localCellStyle[row][col].style.fontWeight || \"\";\r\n        td.style.fontStyle = localCellStyle[row][col].style.fontStyle || \"\";\r\n        td.style.textDecoration = localCellStyle[row][col].style.textDecoration || \"\";\r\n        td.style.color = localCellStyle[row][col].style.color || \"#000000\";\r\n        td.style.backgroundColor = localCellStyle[row][col].style.backgroundColor || \"#FFFFFF\";\r\n      };\r\n\r\n      return cellProperties;\r\n    },\r\n\r\n    licenseKey: \"non-commercial-and-evaluation\",\r\n  };\r\n\r\n  const setColWidths = (table, setOptions) => {\r\n    let colLength = table.getData()[0].length;\r\n    let widths = [];\r\n\r\n    for (let i = 0; i < colLength; i++) widths.push(table.getColWidth(i));\r\n\r\n    setOptions.cellInfo.colWidths = widths;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  const setRowHeights = (table, setOptions) => {\r\n    let rowLength = table.getData().length;\r\n    let heights = [];\r\n\r\n    for (let i = 0; i < rowLength; i++) heights.push(table.getRowHeight(i));\r\n\r\n    setOptions.cellInfo.rowHeights = heights;\r\n\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(setOptions));\r\n  };\r\n\r\n  let myTable;\r\n  const makeTable = () => {\r\n    const container = document.getElementById(\"hot-app\");\r\n    container.innerHTML = \"\";\r\n\r\n    myTable = new Handsontable(container, {\r\n      ...options,\r\n      ...myOptions.trueFalseOptions,\r\n      ...myOptions.numberOptions,\r\n      ...myOptions.cellInfo,\r\n    });\r\n\r\n    myTable.addHook(\"afterMergeCells\", function(cellRange, mergeParent, auto) {\r\n      let temp = getMergeCells();\r\n      temp.push(mergeParent);\r\n      temp = temp.filter(\r\n        (item) => myTable.getCellMeta(item.row, item.col).spanned === true\r\n      );\r\n\r\n      localStorage.setItem(MERGE_CELLS_KEY, JSON.stringify([...temp]));\r\n    });\r\n\r\n    myTable.addHook(\"afterColumnResize\", function(col, width) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setColWidths(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.colWidths) === false) {\r\n        setColWidths(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.colWidths[col] = width;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.addHook(\"afterRowResize\", function(row, height) {\r\n      let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n      if (localOptions === null) {\r\n        setRowHeights(this, myOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions = JSON.parse(localOptions);\r\n      if (Array.isArray(localOptions.cellInfo.rowHeights) === false) {\r\n        setRowHeights(this, localOptions);\r\n        return;\r\n      }\r\n\r\n      localOptions.cellInfo.rowHeights[row] = height;\r\n      localStorage.setItem(MY_OPTIONS, JSON.stringify(localOptions));\r\n    });\r\n\r\n    myTable.render();\r\n    setMyHandsOnTable(myTable);\r\n\r\n    // search 구현\r\n    // let searchField = document.getElementById(\"search_field\");\r\n    // let resultCount = document.getElementById(\"resultCount\");\r\n\r\n    // Handsontable.dom.addEvent(searchField, \"keyup\", function(event) {\r\n    //   searchResultCount = 0;\r\n\r\n    //   let search = myTable.getPlugin(\"search\");\r\n    //   let queryResult = search.query(this.value);\r\n\r\n    //   console.log(queryResult);\r\n\r\n    //   resultCount.innerText = searchResultCount.toString();\r\n    //   myTable.render();\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeTable();\r\n  }, [myOptions]);\r\n\r\n  const changeFormat = (value) => {\r\n    value = value || \"\";\r\n    value = value.toString();\r\n    if (value.includes('\"')) return '\"' + value.replace(/\"/g, '\"\"') + '\"';\r\n    if (value.includes(\",\") || value.includes(\"\\n\")) return '\"' + value + '\"';\r\n    return value;\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    let data = myHandsOnTable.getData();\r\n\r\n    let csv = \"\";\r\n    for (let r = 0; r < data.length; r++) {\r\n      let row = data[r].map(changeFormat).join(\",\");\r\n      csv += row + \"\\n\";\r\n    }\r\n\r\n    let fileDown = \"data:csv;charset=utf-8,\" + csv;\r\n    let encodedUri = encodeURI(fileDown);\r\n    let link = document.createElement(\"a\");\r\n\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"handsontable.csv\");\r\n\r\n    document.body.appendChild(link);\r\n\r\n    link.click();\r\n\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <Button\r\n          sx={{ m: 2 }}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={downloadCSV}\r\n        >\r\n          Download CSV\r\n        </Button>\r\n        {/* <input id=\"search_field\" type=\"search\" placeholder=\"search\" />\r\n        <p>\r\n        <span id=\"resultCount\">0</span> results\r\n      </p> */}\r\n        <HandsontableToggleButton\r\n          myHandsOnTable={myHandsOnTable}\r\n          selectedCell={selectedCell}\r\n        />\r\n        <DisplayCellStyle>\r\n          <span>{displayCellInfo}</span>\r\n        </DisplayCellStyle>\r\n        <div id=\"hot-app\" style={{ marginTop: \"13px\" }}></div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomHansOnTable;","import React, { useState, useEffect } from \"react\";\r\nimport CustomHansOnTable from \"./CustomHansOnTable\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nconst MY_OPTIONS = \"MY_OPTIONS\";\r\n\r\nconst myDefaultOptions = {\r\n  trueFalseOptions: {\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    wordWrap: false /* 줄 바꿈 off */,\r\n    manualColumnResize: true,\r\n    manualRowResize: true,\r\n    manualColumnMove: true,\r\n    manualRowMove: true,\r\n    allowInsertColumn: true,\r\n    allowInsertRow: true,\r\n    allowRemoveColumn: true,\r\n    allowRemoveRow: true,\r\n    autoWrapCol: true /* 마지막 셀 아래에서 다음 셀 위로 이동 */,\r\n    autoWrapRow: true /* 마지막 셀 옆에서 다음 셀 처음으로 이동 */,\r\n    dragToScroll: true /* 표를 클릭 후 드래그를 할 때, 같이 스크롤 되는지 여부 */,\r\n    persistentState: false /* 열 정렬 상태, 열 위치 및 열 크기를 로컬 스토리지에 저장 */,\r\n    // outsideClickDeselects: false /* 셀 외부 클릭 시, 셀 선택 해제 */,\r\n    readOnly: false /* true : 모든 셀을 readOnly로 설정*/,\r\n    enterBeginsEditing: true /* true : 엔터 클릭 시 편집 모드, false : 다음 셀로 이동 */,\r\n    copyable: true /* 복사 가능 여부 */,\r\n    copyPaste: true /* 복사, 붙여넣기 가능 여부 */,\r\n    undo: true /* false : ctrl + z 비활성화 */,\r\n    trimWhitespace: false /* 자동 trim() 실행 후 셀에 저장 */,\r\n    contextMenu: true /* 마우스 왼쪽 버튼 클릭 시 컨텍스트 메뉴 */,\r\n    comments: true /* 주석, 메모 기능 context menu에 추가 */,\r\n    manualColumnFreeze: true /* freezeColumn context menu에 추가 */,\r\n    observeChanges: true,\r\n  },\r\n\r\n  numberOptions: {\r\n    width: 1000,\r\n    height: 1000,\r\n    startCols: 5 /* data가 없는 경우 기본 설정 */,\r\n    startRows: 5 /* data가 없는 경우 기본 설정 */,\r\n    maxCols: 100 /* 주어진 값보다 큰 Column은 제거 */,\r\n    maxRows: 100 /* 주어진 값보다 큰 Row는 제거 */,\r\n    minCols: 1 /* 최소한의 Column */,\r\n    minRows: 1 /* 최소한의 Row */,\r\n    minSpareRows: 0 /* 빈 열 자동 추가 */,\r\n    minSpareCols: 0 /* 빈 행 자동 추가 */,\r\n    fixedColumnsLeft: 0,\r\n    fixedRowsTop: 0,\r\n    fixedRowsBottom: 0,\r\n    rowHeaderWidth: 55 /* 행 헤더 너비 */,\r\n  },\r\n\r\n  cellInfo: {\r\n    colWidths: 60,\r\n    rowHeights: 25,\r\n  },\r\n};\r\n\r\nconst MyHandsonTable = () => {\r\n  const [myOptions, setMyOptions] = useState(myDefaultOptions);\r\n\r\n  const [state, setState] = useState({ right: false });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const changeTrueFalseOptions = (option, value) => {\r\n    console.log(myOptions);\r\n    let temp = { ...myOptions };\r\n    temp.trueFalseOptions[option] = !value;\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeTrueFalseCheckBox = () => {\r\n    let pair = Object.entries(myOptions.trueFalseOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Boolean(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControlLabel\r\n        key={idx}\r\n        control={<Checkbox checked={item[1]} />}\r\n        label={item[0]}\r\n        onChange={() => changeTrueFalseOptions(item[0], item[1])}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const changeNumberOptions = (option, value) => {\r\n    let temp = { ...myOptions };\r\n\r\n    if (isNaN(Number(value))) return;\r\n\r\n    temp.numberOptions[option] = Number(value);\r\n    setMyOptions(temp);\r\n    localStorage.setItem(MY_OPTIONS, JSON.stringify(temp));\r\n  };\r\n\r\n  const makeNumberInput = () => {\r\n    let pair = Object.entries(myOptions.numberOptions);\r\n\r\n    pair = pair.map((item) => [item[0], Number(item[1])]);\r\n\r\n    return pair.map((item, idx) => (\r\n      <FormControl key={idx} sx={{ m: 2 }} variant=\"standard\">\r\n        <InputLabel htmlFor=\"component-error\">{item[0]}</InputLabel>\r\n        <Input\r\n          value={item[1]}\r\n          onChange={(e) => changeNumberOptions(item[0], e.target.value)}\r\n        />\r\n      </FormControl>\r\n    ));\r\n  };\r\n\r\n  const list = () => (\r\n    <Box sx={{ width: 600 }}>\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>{makeTrueFalseCheckBox()}</Box>\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ m: 2, flexDirection: \"row\" }}>\r\n        <FormHelperText sx={{ color: \"blue\" }}>\r\n          0 이상 숫자를 입력하세요.\r\n        </FormHelperText>\r\n        {makeNumberInput()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const initLocalStorage = () => {\r\n    let localOptions = localStorage.getItem(MY_OPTIONS);\r\n\r\n    if (localOptions === null) return;\r\n\r\n    setMyOptions(JSON.parse(localOptions));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initLocalStorage();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {[\"right\"].map((anchor) => (\r\n          <React.Fragment key={anchor}>\r\n            <Button\r\n              sx={{ m: 2 }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={toggleDrawer(anchor, true)}\r\n            >\r\n              Options Setting\r\n            </Button>\r\n            <Drawer\r\n              anchor={anchor}\r\n              open={state[anchor]}\r\n              onClose={toggleDrawer(anchor, false)}\r\n            >\r\n              {list()}\r\n            </Drawer>\r\n          </React.Fragment>\r\n        ))}\r\n        <CustomHansOnTable myOptions={myOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyHandsonTable;\r\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst MyCKEditor = () => {\n  return (\n    <div>\n      <Box sx={{ m: 2 }}>\n        <h1>CK Editor</h1>\n        <CKEditor\n          editor={ClassicEditor}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onReady={(editor) => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log(\"Editor is ready to use!\", editor);\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(event, editor) => {\n            console.log(\"Blur.\", editor);\n          }}\n          onFocus={(event, editor) => {\n            console.log(\"Focus.\", editor);\n          }}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default MyCKEditor;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Textarea from \"@mui/joy/Textarea\";\n\nimport ReactDiffViewer, { DiffMethod } from \"react-diff-viewer-continued\";\n\nconst MyDiffViewer = () => {\n  const [oldCode, setOldCode] = useState(\"\");\n  const [newCode, setNewCode] = useState(\"\");\n  const [splitView, setSplitView] = useState(true);\n  const [diffMethod, setDiffMethod] = useState(DiffMethod.CHARS);\n\n  return (\n    <Box sx={{ m: 2 }}>\n      <ToggleButton\n        sx={{ marginBottom: 2 }}\n        value=\"check\"\n        selected={splitView}\n        onChange={() => {\n          setSplitView(!splitView);\n        }}\n      >\n        <CheckIcon size=\"small\" /> split\n      </ToggleButton>\n      <Box\n        sx={{\n          m: 1,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Textarea\n          style={{\n            width: \"50%\",\n            margin: \"1px\",\n          }}\n          name=\"Left\"\n          placeholder=\"Old Text...\"\n          variant=\"outlined\"\n          color=\"primary\"\n          minRows={15}\n          maxRows={15}\n          value={oldCode}\n          onChange={(e) => setOldCode(e.target.value)}\n        />\n        <Textarea\n          style={{\n            width: \"50%\",\n            margin: \"1px\",\n          }}\n          name=\"Right\"\n          placeholder=\"New Text...\"\n          variant=\"outlined\"\n          color=\"warning\"\n          minRows={15}\n          maxRows={15}\n          value={newCode}\n          onChange={(e) => setNewCode(e.target.value)}\n        />\n      </Box>\n      <ReactDiffViewer\n        oldValue={oldCode}\n        newValue={newCode}\n        compareMethod={diffMethod}\n        splitView={splitView}\n      />\n      <FormControl sx={{ m: 2, width: \"500px\" }}>\n        <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={diffMethod}\n          label=\"Diff Method\"\n          onChange={(e) => setDiffMethod(e.target.value)}\n        >\n          <MenuItem value=\"diffChars\">CHARS</MenuItem>\n          <MenuItem value=\"diffWords\">WORDS</MenuItem>\n          <MenuItem value=\"diffWordsWithSpace\">WORDS_WITH_SPACE</MenuItem>\n          <MenuItem value=\"diffLines\">LINES </MenuItem>\n          <MenuItem value=\"diffTrimmedLines\">TRIMMED_LINES </MenuItem>\n          <MenuItem value=\"diffSentences\">SENTENCES </MenuItem>\n          <MenuItem value=\"diffCss\">CSS </MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default MyDiffViewer;\n","import React, { useState } from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Textarea from \"@mui/joy/Textarea\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst TextAreaTabPanel = (props) => {\r\n  const { children, value, index, tabs, setTabs, ...other } = props;\r\n\r\n  const handleChange = (event) => {\r\n    const updatedTabs = [...tabs];\r\n    updatedTabs[index].content = event.target.value;\r\n    setTabs(updatedTabs);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Textarea\r\n            id={`textarea-${index}`}\r\n            placeholder=\"Input Text ...\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            minRows={15}\r\n            maxRows={15}\r\n            value={tabs[index].content}\r\n            onChange={handleChange}\r\n          />\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabEditor = () => {\r\n  const [tabs, setTabs] = useState([\r\n    { title: \"Tab 1\", content: \"Content 1\" },\r\n    { title: \"Tab 2\", content: \"Content 2\" },\r\n    { title: \"Tab 3\", content: \"Content 3\" },\r\n  ]);\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const changeTabTitle = (index, newTitle) => {\r\n    const updatedTabs = [...tabs];\r\n    updatedTabs[index].title = newTitle;\r\n    setTabs(updatedTabs);\r\n  };\r\n\r\n  const handleTitleBlur = (index, event) => {\r\n    const newTitle = event.target.value.trim();\r\n    if (newTitle !== \"\" && newTitle !== tabs[index].title) {\r\n      changeTabTitle(index, newTitle);\r\n    }\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const addTab = () => {\r\n    const newTab = {\r\n      title: `New Tab`,\r\n      content: `New Content`,\r\n    };\r\n    setTabs([...tabs, newTab]);\r\n    setActiveTab(tabs.length); // Make the newly added tab active\r\n  };\r\n\r\n  const deleteTab = (index) => {\r\n    const updatedTabs = tabs.filter((tab, i) => i !== index);\r\n    setTabs(updatedTabs);\r\n    if (activeTab === index) {\r\n      setActiveTab(Math.max(activeTab - 1, 0));\r\n    }\r\n  };\r\n\r\n  const handleTabContextMenu = (event, index) => {\r\n    event.preventDefault();\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to delete this tab?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes\",\r\n      cancelButtonText: \"No\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteTab(index);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ m: 2 }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleTabChange}\r\n          aria-label=\"dynamic tabs example\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((tab, index) => (\r\n            <Tab\r\n              key={index}\r\n              label={\r\n                editIndex === index ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={tab.title}\r\n                    autoFocus\r\n                    onFocus={(e) => e.target.select()}\r\n                    onChange={(e) => changeTabTitle(index, e.target.value)}\r\n                    onBlur={(e) => handleTitleBlur(index, e)}\r\n                    style={{ border: \"none\", outline: \"none\" }}\r\n                  />\r\n                ) : (\r\n                  <span\r\n                    onDoubleClick={() => setEditIndex(index)}\r\n                    onContextMenu={(event) =>\r\n                      handleTabContextMenu(event, index)\r\n                    }\r\n                  >\r\n                    {tab.title}\r\n                  </span>\r\n                )\r\n              }\r\n            />\r\n          ))}\r\n          <Tab onClick={addTab} label={<AddIcon />} />\r\n        </Tabs>\r\n      </Box>\r\n      {tabs.map((tab, index) => (\r\n        <TextAreaTabPanel\r\n          key={index}\r\n          value={activeTab}\r\n          index={index}\r\n          tabs={tabs}\r\n          setTabs={setTabs}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TabEditor;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { Transition } from \"react-transition-group\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Snackbar } from \"@mui/base/Snackbar\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst blue = {\r\n  200: \"#99CCF3\",\r\n  300: \"#66B2FF\",\r\n  400: \"#3399FF\",\r\n  500: \"#007FFF\",\r\n  600: \"#0072E5\",\r\n  700: \"#0066CC\",\r\n};\r\n\r\nconst grey = {\r\n  50: \"#F3F6F9\",\r\n  100: \"#E5EAF2\",\r\n  200: \"#DAE2ED\",\r\n  300: \"#C7D0DD\",\r\n  400: \"#B0B8C4\",\r\n  500: \"#9DA8B7\",\r\n  600: \"#6B7A90\",\r\n  700: \"#434D5B\",\r\n  800: \"#303740\",\r\n  900: \"#1C2025\",\r\n};\r\n\r\nconst TriggerButton = styled(\"button\")(\r\n  ({ theme }) => `\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  transition: all 150ms ease;\r\n  cursor: pointer;\r\n  background: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\r\n  border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\r\n  color: ${theme.palette.mode === \"dark\" ? grey[200] : grey[900]};\r\n  box-shadow: 0 1px 2px ${\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(0, 0, 0, 0.5)\"\r\n      : \"rgba(45, 45, 60, 0.15)\"\r\n  };\r\n\r\n  &:hover {\r\n    background: ${theme.palette.mode === \"dark\" ? grey[800] : grey[50]};\r\n    border-color: ${theme.palette.mode === \"dark\" ? grey[600] : grey[300]};\r\n  }\r\n  &:active {\r\n    background: ${theme.palette.mode === \"dark\" ? grey[700] : grey[100]};\r\n  }\r\n\r\n  &:focus-visible {\r\n    box-shadow: 0 0 0 4px ${\r\n      theme.palette.mode === \"dark\" ? blue[300] : blue[200]\r\n    };\r\n    outline: none;\r\n  }\r\n  `\r\n);\r\n\r\nconst StyledSnackbar = styled(Snackbar)`\r\n  position: fixed;\r\n  z-index: 5500;\r\n  display: flex;\r\n  top: 16px; \r\n  left: 50%;\r\n  transform: translateX(-50%); \r\n`;\r\n\r\nconst SnackbarContent = styled(\"div\")(\r\n  ({ theme }) => `\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 5500;\r\n  display: flex;\r\n  left: auto;\r\n  justify-content: space-between;\r\n  max-width: 560px;\r\n  min-width: 300px;\r\n  background-color: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\r\n  border-radius: 8px;\r\n  border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\r\n  box-shadow: ${\r\n    theme.palette.mode === \"dark\"\r\n      ? `0 2px 8px rgb(0 0 0 / 0.5)`\r\n      : `0 2px 8px ${grey[200]}`\r\n  };\r\n  padding: 0.75rem;\r\n  color: ${theme.palette.mode === \"dark\" ? grey[50] : grey[900]};\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-weight: 600;\r\n\r\n  & .snackbar-title {\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  & .snackbar-close-icon {\r\n    cursor: pointer;\r\n    font-size: 10px;\r\n    width: 1.25rem;\r\n    height: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  `\r\n);\r\n\r\nconst positioningStyles = {\r\n  entering: \"translateX(0)\",\r\n  entered: \"translateX(0)\",\r\n  exiting: \"translateX(1500px)\",\r\n  exited: \"translateX(1500px)\",\r\n  unmounted: \"translateX(1500px)\",\r\n};\r\n\r\nconst Floating = () => {\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [floatingMessage, setFloatingMessage] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [exited, setExited] = useState(true);\r\n  const nodeRef = useRef(null);\r\n\r\n  const handleClose = (_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOnEnter = () => {\r\n    setExited(false);\r\n  };\r\n\r\n  const handleOnExited = () => {\r\n    setExited(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showAlert) {\r\n      timer = setTimeout(() => {\r\n        setShowAlert(false);\r\n      }, 3000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [showAlert]);\r\n\r\n  const handleButtonClick = (index) => {\r\n    setShowAlert(true);\r\n    setFloatingMessage(`${index} 번째 플로팅 메시지...`);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const paragraphs = Array.from({ length: 30 }, (_, index) => (\r\n    <p key={index}>\r\n      {`　　${index} : 번째 내용 ........................................................................................................................................................................................................   `}\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => handleButtonClick(index)}\r\n      >\r\n        Button\r\n      </Button>\r\n    </p>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TriggerButton type=\"button\" onClick={handleClick}>\r\n          Open snackbar\r\n        </TriggerButton>\r\n        <StyledSnackbar\r\n          autoHideDuration={5000}\r\n          open={open}\r\n          onClose={handleClose}\r\n          exited={exited}\r\n        >\r\n          <Transition\r\n            timeout={{ enter: 400, exit: 400 }}\r\n            in={open}\r\n            appear\r\n            unmountOnExit\r\n            onEnter={handleOnEnter}\r\n            onExited={handleOnExited}\r\n            nodeRef={nodeRef}\r\n          >\r\n            {(status) => (\r\n              <SnackbarContent\r\n                style={{\r\n                  transform: positioningStyles[status],\r\n                  transition: \"transform 300ms ease\",\r\n                }}\r\n                ref={nodeRef}\r\n              >\r\n                <div className=\"snackbar-title\">Hello World</div>\r\n                <CloseIcon\r\n                  onClick={handleClose}\r\n                  className=\"snackbar-close-icon\"\r\n                />\r\n              </SnackbarContent>\r\n            )}\r\n          </Transition>\r\n        </StyledSnackbar>\r\n      </div>\r\n      {paragraphs}\r\n      {showAlert && (\r\n        <Alert\r\n          severity=\"info\"\r\n          onClose={handleAlertClose}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 5,\r\n            left: \"50%\",\r\n            transform: \"translateX(-50%)\",\r\n            zIndex: 9999,\r\n            opacity: 0.8, // 투명도 조절\r\n          }}\r\n        >\r\n          {floatingMessage}\r\n        </Alert>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Floating;\r\n","import React, { useState } from \"react\";\r\nimport { Box, TextField, Button } from \"@mui/material\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst SECRET_KEY = \"MY_SECRET_KEY\"; // or process.env.SECRET_KEY;\r\n\r\nconst EncryptionComponent = () => {\r\n  const [inputText1, setInputText1] = useState(\"\");\r\n  const [inputText2, setInputText2] = useState(\"\");\r\n\r\n  const [encryptedAESText, setEncryptedAESText] = useState(\"\");\r\n  const [decryptedAESText, setDecryptedAESText] = useState(\"\");\r\n  const [hashedText, setHashedText] = useState(\"\");\r\n\r\n  const encryptAES = () => {\r\n    let encrypted = CryptoJS.AES.encrypt(inputText1, SECRET_KEY).toString();\r\n    setEncryptedAESText(encrypted);\r\n  };\r\n\r\n  const decryptAES = () => {\r\n    let decrypted = CryptoJS.AES.decrypt(inputText1, SECRET_KEY).toString(CryptoJS.enc.Utf8);\r\n    setDecryptedAESText(decrypted);\r\n  };\r\n\r\n  const hashText = () => {\r\n    let hashed = CryptoJS.SHA256(inputText2).toString();\r\n    setHashedText(hashed);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <TextField\r\n          label=\"Text for AES\"\r\n          value={inputText1}\r\n          onChange={(e) => setInputText1(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ m: 1 }}\r\n          variant=\"outlined\"\r\n          color=\"warning\"\r\n          onClick={encryptAES}\r\n        >\r\n          Encrypt\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"success\" onClick={decryptAES}>\r\n          Decrypt\r\n        </Button>\r\n        <div>\r\n          <p>Encrypted Text AES: {encryptedAESText}</p>\r\n          <p>Decrypted Text AES: {decryptedAESText}</p>\r\n        </div>\r\n      </Box>\r\n\r\n      <hr />\r\n\r\n      <Box sx={{ m: 2 }}>\r\n        <TextField\r\n          label=\"Text for SHA256\"\r\n          value={inputText2}\r\n          onChange={(e) => setInputText2(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ m: 1 }}\r\n          variant=\"outlined\"\r\n          color=\"warning\"\r\n          onClick={hashText}\r\n        >\r\n          Hash\r\n        </Button>\r\n        <div>\r\n          <p>Hashed Text SHA256 : {hashedText}</p>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EncryptionComponent;\r\n","import { defineFileAction, ChonkyIconName } from \"chonky\";\r\n\r\nconst uploadFileAction = defineFileAction({\r\n  id: \"upload\",\r\n  button: {\r\n    name: \"Upload\",\r\n    toolbar: true,\r\n    contextMenu: false, \r\n    icon: ChonkyIconName.upload\r\n  }\r\n});\r\n\r\nconst viewFileAction = defineFileAction({\r\n  id: \"view\",\r\n  requiresSelection: true,\r\n  fileFilter: (file) => !file.isDir,\r\n  button: {\r\n    name: \"View\",\r\n    toolbar: false, \r\n    contextMenu: true,\r\n    icon: ChonkyIconName.file\r\n  }\r\n});\r\n\r\nexport const customActions = [\r\n  viewFileAction,\r\n  uploadFileAction\r\n];\r\n","import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n} from \"react\";\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  setChonkyDefaults,\r\n  ChonkyActions,\r\n  FileHelper,\r\n  FullFileBrowser,\r\n} from \"chonky\";\r\nimport { ChonkyIconFA } from \"chonky-icon-fontawesome\";\r\nimport { customActions } from \"./myCustomActions\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst ChonkyBrowser = React.memo((props) => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  const fileInputRef = useRef(null);\r\n  const navigate  = useNavigate();\r\n\r\n  // const demoMap = require(\"./demo.json\");\r\n  const demoMap = props.chonkyMap;\r\n\r\n  const prepareCustomFileMap = () => {\r\n    const baseFileMap = demoMap.fileMap;\r\n    const rootFolderId = demoMap.rootFolderId;\r\n    return { baseFileMap, rootFolderId };\r\n  };\r\n\r\n  const useCustomFileMap = () => {\r\n    const { baseFileMap, rootFolderId } = useMemo(prepareCustomFileMap, []);\r\n\r\n    const [fileMap, setFileMap] = useState(baseFileMap);\r\n    const [currentFolderId, setCurrentFolderId] = useState(rootFolderId);\r\n\r\n    const resetFileMap = useCallback(() => {\r\n      setFileMap(baseFileMap);\r\n      setCurrentFolderId(rootFolderId);\r\n    }, [baseFileMap, rootFolderId]);\r\n\r\n    const currentFolderIdRef = useRef(currentFolderId);\r\n    useEffect(() => {\r\n      currentFolderIdRef.current = currentFolderId;\r\n    }, [currentFolderId]);\r\n\r\n    const deleteFiles = useCallback((files) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n        files.forEach((file) => {\r\n          delete newFileMap[file.id];\r\n\r\n          if (file.parentId) {\r\n            const parent = newFileMap[file.parentId];\r\n            const newChildrenIds = parent.childrenIds.filter(\r\n              (id) => id !== file.id\r\n            );\r\n            newFileMap[file.parentId] = {\r\n              ...parent,\r\n              childrenIds: newChildrenIds,\r\n              childrenCount: newChildrenIds.length,\r\n            };\r\n          }\r\n        });\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const moveFiles = useCallback((files, source, destination) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n        const moveFileIds = new Set(files.map((f) => f.id));\r\n\r\n        const newSourceChildrenIds = source.childrenIds.filter(\r\n          (id) => !moveFileIds.has(id)\r\n        );\r\n        newFileMap[source.id] = {\r\n          ...source,\r\n          childrenIds: newSourceChildrenIds,\r\n          childrenCount: newSourceChildrenIds.length,\r\n        };\r\n\r\n        const newDestinationChildrenIds = [\r\n          ...destination.childrenIds,\r\n          ...files.map((f) => f.id),\r\n        ];\r\n        newFileMap[destination.id] = {\r\n          ...destination,\r\n          childrenIds: newDestinationChildrenIds,\r\n          childrenCount: newDestinationChildrenIds.length,\r\n        };\r\n\r\n        files.forEach((file) => {\r\n          newFileMap[file.id] = {\r\n            ...file,\r\n            parentId: destination.id,\r\n          };\r\n        });\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const idCounter = useRef(0);\r\n    const createFolder = useCallback((folderName) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n\r\n        const newFolderId = `new-folder-${idCounter.current++}`;\r\n        newFileMap[newFolderId] = {\r\n          id: newFolderId,\r\n          name: folderName,\r\n          isDir: true,\r\n          modDate: new Date(),\r\n          parentId: currentFolderIdRef.current,\r\n          childrenIds: [],\r\n          childrenCount: 0,\r\n        };\r\n\r\n        const parent = newFileMap[currentFolderIdRef.current];\r\n        newFileMap[currentFolderIdRef.current] = {\r\n          ...parent,\r\n          childrenIds: [...parent.childrenIds, newFolderId],\r\n        };\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    const createFile = useCallback((fileName) => {\r\n      setFileMap((currentFileMap) => {\r\n        const newFileMap = { ...currentFileMap };\r\n\r\n        const newFolderId = `new-folder-${idCounter.current++}`;\r\n        newFileMap[newFolderId] = {\r\n          id: newFolderId,\r\n          name: fileName,\r\n          modDate: new Date(),\r\n          parentId: currentFolderIdRef.current,\r\n          childrenIds: [],\r\n          childrenCount: 0,\r\n        };\r\n\r\n        const parent = newFileMap[currentFolderIdRef.current];\r\n        newFileMap[currentFolderIdRef.current] = {\r\n          ...parent,\r\n          childrenIds: [...parent.childrenIds, newFolderId],\r\n        };\r\n\r\n        return newFileMap;\r\n      });\r\n    }, []);\r\n\r\n    return {\r\n      fileMap,\r\n      currentFolderId,\r\n      setCurrentFolderId,\r\n      resetFileMap,\r\n      deleteFiles,\r\n      moveFiles,\r\n      createFolder,\r\n      createFile,\r\n    };\r\n  };\r\n\r\n  const useFiles = (fileMap, currentFolderId) => {\r\n    return useMemo(() => {\r\n      const currentFolder = fileMap[currentFolderId];\r\n      const childrenIds = currentFolder.childrenIds;\r\n      const files = childrenIds.map((fileId) => fileMap[fileId]);\r\n      return files;\r\n    }, [currentFolderId, fileMap]);\r\n  };\r\n\r\n  const useFolderChain = (fileMap, currentFolderId) => {\r\n    return useMemo(() => {\r\n      const currentFolder = fileMap[currentFolderId];\r\n      const folderChain = [currentFolder];\r\n      let parentId = currentFolder.parentId;\r\n      while (parentId) {\r\n        const parentFile = fileMap[parentId];\r\n        if (parentFile) {\r\n          folderChain.unshift(parentFile);\r\n          parentId = parentFile.parentId;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      return folderChain;\r\n    }, [currentFolderId, fileMap]);\r\n  };\r\n\r\n  const useFileActionHandler = (\r\n    folderChain,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    toggleDarkMode,\r\n    fileInputRef\r\n  ) => {\r\n    return useCallback(\r\n      (data) => {\r\n        if (data.id === ChonkyActions.OpenFiles.id) {\r\n          const { targetFile, files } = data.payload;\r\n          const fileToOpen = targetFile || files[0];\r\n                   \r\n          if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\r\n            setCurrentFolderId(fileToOpen.id);\r\n            return;\r\n          }\r\n\r\n          if(targetFile.name.endsWith(\".md\")) {\r\n            let fileNames = data.state.selectedFiles.map((item) => item.name);\r\n            let dirPath = folderChain.map((item) => item.name).join(\"/\");\r\n            let filePath = `${dirPath}/${fileNames}`;\r\n\r\n            // navigate(\"/tui-editor\", { state: { filePath } });\r\n            localStorage.setItem(\"FILE_PATH\", JSON.stringify({ filePath }));\r\n            window.open(\"/react-project/tui-editor\", \"_blank\");\r\n          }\r\n        } else if (data.id === ChonkyActions.DeleteFiles.id) {\r\n          deleteFiles(data.state.selectedFilesForAction);\r\n        } else if (data.id === ChonkyActions.MoveFiles.id) {\r\n          moveFiles(\r\n            data.payload.files,\r\n            data.payload.source,\r\n            data.payload.destination\r\n          );\r\n        } else if (data.id === ChonkyActions.CreateFolder.id) {\r\n          const folderName = prompt(\"Provide the name for your new folder:\");\r\n          if (folderName) createFolder(folderName);\r\n        } else if (data.id === ChonkyActions.ToggleDarkMode.id) {\r\n          toggleDarkMode();\r\n        } else if (data.id === \"view\") {\r\n          let fileNames = data.state.selectedFiles.map((item) => item.name);\r\n          let dirPath = folderChain.map((item) => item.name).join(\"/\");\r\n\r\n          for (let name of fileNames) {\r\n            console.log(`${dirPath}/${name}`);\r\n          }\r\n        } else if (data.id === \"upload\") {\r\n          fileInputRef.current.click();\r\n        } \r\n\r\n        console.log(data);\r\n      },\r\n      [createFolder, deleteFiles, moveFiles, setCurrentFolderId, toggleDarkMode]\r\n    );\r\n  };\r\n\r\n  const {\r\n    fileMap,\r\n    currentFolderId,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    createFile,\r\n  } = useCustomFileMap();\r\n\r\n  setChonkyDefaults({ iconComponent: ChonkyIconFA });\r\n\r\n  const files = useFiles(fileMap, currentFolderId);\r\n  const folderChain = useFolderChain(fileMap, currentFolderId);\r\n  const handleFileAction = useFileActionHandler(\r\n    folderChain,\r\n    setCurrentFolderId,\r\n    deleteFiles,\r\n    moveFiles,\r\n    createFolder,\r\n    toggleDarkMode,\r\n    fileInputRef\r\n  );\r\n\r\n  const fileActions = useMemo(\r\n    () => [\r\n      ...customActions,\r\n      ChonkyActions.CreateFolder,\r\n      ChonkyActions.DeleteFiles,\r\n      // ChonkyActions.CopyFiles,\r\n      // ChonkyActions.UploadFiles,\r\n      // ChonkyActions.DownloadFiles,\r\n      ChonkyActions.ToggleDarkMode,\r\n    ],\r\n    []\r\n  );\r\n\r\n  const thumbnailGenerator = useCallback(\r\n    (file) =>\r\n      file.thumbnailUrl ? `https://chonky.io${file.thumbnailUrl}` : null,\r\n    []\r\n  );\r\n\r\n  const fileUpload = async (e) => {\r\n    let files = e.target.files;\r\n    for (let file of files) {\r\n      if (file === undefined) continue;\r\n\r\n      console.log(file.name); // 파일 이름\r\n\r\n      createFile(file.name);\r\n      // 실제 파일 내용 read\r\n      // let fileReader = new FileReader();\r\n      // fileReader.readAsText(file, \"utf-8\"); // or euc-kr\r\n      // fileReader.onload = function () {\r\n      //   console.log(fileReader.result);\r\n      // };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ m: 2 }}>\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        accept=\".json,.md\"\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        onChange={(e) => fileUpload(e)}\r\n      />\r\n\r\n      <div style={{ height: 400 }}>\r\n        <FullFileBrowser\r\n          files={files}\r\n          folderChain={folderChain}\r\n          fileActions={fileActions}\r\n          onFileAction={handleFileAction}\r\n          thumbnailGenerator={thumbnailGenerator}\r\n          // disableDefaultFileActions={true} // default false\r\n          // doubleClickDelay={500} // ms\r\n          // disableSelection={true} // default false 파일 선택이 해제됨\r\n          // disableDragAndDrop={true} // 드래그 앤 드랍 기능 off\r\n          // disableDragAndDropProvider={true} // default false, Provider : 다른 드래그 앤 드롭은 유지\r\n          // defaultSortActionId={ChonkyActions.SortFilesByDate.id} // SortFilesByName, SortFilesBySize, SortFilesByDate\r\n          // defaultFileViewActionId={ChonkyActions.EnableListView.id} // EnableGridView, EnableListView\r\n          // clearSelectionOnOutsideClick={false} // default true 브라우저 외부 클릭 시 파일 선택 해제\r\n          darkMode={darkMode}\r\n          {...props}\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default ChonkyBrowser;\r\n","import React from \"react\";\r\n\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n  Avatar,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\n\r\nconst ChatUI = () => {\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"relative\", height: \"500px\" }}>\r\n        <MainContainer>\r\n          <ChatContainer>\r\n            <MessageList>\r\n              <Message\r\n                model={{\r\n                  direction: \"incoming\",\r\n                  type: \"custom\",\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    \"https://img1.daumcdn.net/thumb/C428x428/?scode=mtistory2&fname=https%3A%2F%2Ftistory3.daumcdn.net%2Ftistory%2F4431109%2Fattach%2F3af65be1d8b64ece859b8f6d07fafadc\"\r\n                  }\r\n                  name=\"Akane\"\r\n                />\r\n                <Message.CustomContent>\r\n                  <strong>This is strong text</strong>\r\n                  <br />\r\n                  Message content is provided as{\" \"}\r\n                  <span\r\n                    style={{\r\n                      color: \"red\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    custom elements\r\n                  </span>{\" \"}\r\n                  from child <strong>Message.CustomContent</strong> element\r\n                </Message.CustomContent>\r\n              </Message>\r\n              <p>Provided as payload</p>\r\n              <Message\r\n                model={{\r\n                  message: \"Hello my friend\",\r\n                  sentTime: \"15 mins ago\",\r\n                  direction: \"outgoing\",\r\n                  position: \"first\",\r\n                }}\r\n              />\r\n              <Message\r\n                model={{\r\n                  direction: \"incoming\",\r\n                  payload: (\r\n                    <Message.CustomContent>\r\n                      <strong>This is strong text</strong>\r\n                      <br />\r\n                      Message content is provided as{\" \"}\r\n                      <span\r\n                        style={{\r\n                          color: \"red\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        custom elements\r\n                      </span>{\" \"}\r\n                      from payload property\r\n                    </Message.CustomContent>\r\n                  ),\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    \"https://img1.daumcdn.net/thumb/C428x428/?scode=mtistory2&fname=https%3A%2F%2Ftistory3.daumcdn.net%2Ftistory%2F4431109%2Fattach%2F3af65be1d8b64ece859b8f6d07fafadc\"\r\n                  }\r\n                  name=\"Joe\"\r\n                />\r\n              </Message>\r\n            </MessageList>\r\n            <MessageInput placeholder=\"Type message here\" onChange={(e) => console.log(e)} onSend={(e)=> console.log(`send`, e)}/>\r\n          </ChatContainer>\r\n        </MainContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatUI;\r\n","import { Octokit } from \"@octokit/rest\";\r\n\r\nconst myKey = process.env.REACT_APP_MY_TOKEN.replaceAll(\"X\", \"\");\r\nconst repo = `auto-test`;\r\n\r\nexport const fileRead = async (path) => {\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: myKey,\r\n    });\r\n\r\n    const result = await octokit.request(\r\n      `GET /repos/bloodstrawberry/${repo}/contents/${path}`,\r\n      {\r\n        owner: \"bloodstrawberry\",\r\n        repo: `${repo}`,\r\n        path: `${path}`,\r\n        encoding: \"utf-8\",\r\n        decoding: \"utf-8\",\r\n      }\r\n    );\r\n\r\n    return decodeURIComponent(escape(window.atob(result.data.content)));\r\n  } catch (e) {\r\n    console.log(\"error : \", e);\r\n    return undefined;\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport * as gh from \"./githublibrary.js\";\r\n\r\n// Toast UI Editor\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\r\n\r\n// Dark Theme 적용\r\n// import '@toast-ui/editor/dist/toastui-editor.css';\r\n// import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';\r\n\r\n// Color Syntax Plugin\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\n\r\n// Table Merged Cell Plugin\r\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\r\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\r\n\r\n//import html2pdf from 'html2pdf.js';\r\n\r\nconst colorSyntaxOptions = {\r\n  preset: [\r\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\r\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\r\n  ],\r\n};\r\n\r\nconst CONTENT_KEY = \"CONTENT_KEY\";\r\n\r\nconst ToastEditor = () => {\r\n  const location = useLocation();\r\n\r\n  const editorRef = useRef(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  let initData = `# 제목\r\n\r\n  ***~~<span style=\"color: #EE2323\">내용</span>~~***\r\n  \r\n  * [x] 체크박스\r\n  * [ ] 체크박스 2`;\r\n\r\n  const handleSave = () => {\r\n    let markDownContent = editorRef.current.getInstance().getMarkdown();\r\n    let htmlContent = editorRef.current.getInstance().getHTML();\r\n    console.log(markDownContent);\r\n    console.log(htmlContent);\r\n    localStorage.setItem(CONTENT_KEY, markDownContent);\r\n  };\r\n\r\n  const init = async() => {\r\n    let item = localStorage.getItem(CONTENT_KEY);\r\n    let open = localStorage.getItem(\"FILE_PATH\");\r\n    \r\n    // if(location.state) {\r\n    if(open) {\r\n      // let filePath = location.state.filePath;\r\n      let filePath = JSON.parse(open).filePath;\r\n      let result = await gh.fileRead(`actions/${filePath}`);\r\n\r\n      if(result !== undefined) item = result;\r\n      \r\n      localStorage.removeItem(\"FILE_PATH\");\r\n    }\r\n\r\n    if (editMode === false) {\r\n      const viewer = new Viewer({\r\n        el: document.querySelector(\".toast-editor-viewer\"),\r\n        viewer: true,\r\n        height: \"400px\",\r\n        usageStatistics: false, // 통계 수집 거부\r\n        plugins: [tableMergedCell],\r\n      });\r\n\r\n      if (item) viewer.setMarkdown(item);\r\n      else viewer.setMarkdown(initData);\r\n    }\r\n\r\n    if (item) {\r\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(item);\r\n    } else {\r\n      if (editorRef.current)\r\n        editorRef.current.getInstance().setMarkdown(initData);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [editMode]);\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ m: 2 }}>\r\n        <h1>Toast UI Editor</h1>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          sx={{ m: 1 }}\r\n          onClick={() => setEditMode(!editMode)}\r\n        >\r\n          {editMode ? \"취소하기\" : \"편집하기\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ m: 1 }}\r\n          onClick={handleSave}\r\n          disabled={editMode === false}\r\n        >\r\n          저장하기\r\n        </Button>\r\n\r\n        {editMode === false && <div id=\"pdf-download\" className=\"toast-editor-viewer\"></div>}\r\n\r\n        {editMode === true && (\r\n          <Editor\r\n            ref={editorRef}\r\n            // initialValue={initContents}\r\n            height=\"400px\"\r\n            placeholder=\"Please Enter Text.\"\r\n            previewStyle=\"tab\" // or vertical\r\n            initialEditType=\"wysiwyg\" // or markdown\r\n            // hideModeSwitch={true} // 하단 숨기기\r\n            toolbarItems={[\r\n              // 툴바 옵션 설정\r\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\r\n              [\"hr\", \"quote\"],\r\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\r\n              [\"table\", /* \"image\", */ \"link\"],\r\n              [\"code\", \"codeblock\"],\r\n            ]}\r\n            //theme=\"dark\"\r\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\r\n            usageStatistics={false} // 통계 수집 거부\r\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\r\n          />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastEditor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ChonkyBrowser from \"./ChonkyBrowser\";\r\n\r\nimport * as gh from \"./githublibrary.js\";\r\n\r\nconst ChonkyLoader = () => {\r\n  const [chonkyMap, setChonkyMap] = useState(undefined);\r\n\r\n  const getChonkyMap = async () => {\r\n    let result = await gh.fileRead(\"actions/config/chonky_map.json\");\r\n    if (result === undefined) return;\r\n\r\n    let repoMap = JSON.parse(result);\r\n    setChonkyMap(repoMap);\r\n    console.log(repoMap);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChonkyMap();\r\n  }, []);\r\n\r\n  return <div>{chonkyMap && <ChonkyBrowser chonkyMap={chonkyMap} />}</div>;\r\n};\r\n\r\nexport default ChonkyLoader;\r\n","//App.js\nimport React from \"react\";\n\nimport { Route, Link, Routes } from \"react-router-dom\";\n\n//routing components\nimport Home from \"./page/Home\";\nimport MyHandsonTable from \"./page/MyHandsonTable\";\nimport MyCKEditor from \"./page/MyCKEditor\";\nimport MyDiffViewer from \"./page/MyDiffViewer\";\nimport TabEditor from \"./page/TabEditor\";\n\nimport \"./App.css\";\nimport Floating from \"./page/Floating\";\nimport MyEncrypt from \"./page/MyEncrypt\";\nimport ChonkyBrowser from \"./page/ChonkyBrowser\";\nimport ChatUI from \"./page/ChatUI\";\nimport ToastUIEditor from \"./page/ToastUIEditor\";\nimport ChonkyLoader from \"./page/ChonkyLoader\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"router\">\n        <span>\n          <Link to=\"/myHandsTable\">HandsOnTable</Link>\n        </span>\n        {/* <span>\n          <Link to=\"/ck-editor\">CK Editor</Link>\n        </span> */}\n        <span>\n          <Link to=\"/tui-editor\">Toast UI</Link>\n        </span>        \n        <span>\n          <Link to=\"/diff-viewer\">Diff Viewer</Link>\n        </span>\n        <span>\n          <Link to=\"/tabs\">Tabs</Link>\n        </span>\n        <span>\n          <Link to=\"/floating\">Floating</Link>\n        </span>\n        <span>\n          <Link to=\"/encrypt\">Encrypt</Link>\n        </span>\n        <span>\n          <Link to=\"/filebrowser\">File Browser</Link>\n        </span>\n        <span>\n          <Link to=\"/chat\">Chat Room</Link>\n        </span>        \n      </div>\n      <div>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/myHandsTable\" element={<MyHandsonTable />} />\n          <Route path=\"/ck-editor\" element={<MyCKEditor />} />\n          <Route path=\"/tui-editor\" element={<ToastUIEditor />} />\n          \n          <Route path=\"/diff-viewer\" element={<MyDiffViewer />} />\n          <Route path=\"/tabs\" element={<TabEditor />} />        \n          <Route path=\"/floating\" element={<Floating />} />       \n          <Route path=\"/encrypt\" element={<MyEncrypt />} />                 \n          <Route path=\"/filebrowser\" element={<ChonkyLoader />} />                 \n          \n          <Route path=\"/chat\" element={<ChatUI />} />                              \n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}